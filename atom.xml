<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://geeksblog.cc/"/>
  <updated>2017-05-13T23:39:46.000Z</updated>
  <id>http://geeksblog.cc/</id>
  
  <author>
    <name>山不转水转</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>用koa2.x写下载漫画的爬虫</title>
    <link href="http://geeksblog.cc/spider-koa2.html"/>
    <id>http://geeksblog.cc/spider-koa2.html</id>
    <published>2017-05-13T23:15:38.000Z</published>
    <updated>2017-05-13T23:39:46.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 用koa2.x写下载漫画的爬虫：</strong> <Excerpt in index | 首页摘要><br>使用koa2.x的async ，await解决异步问题，写一个下载漫画的爬虫，代码里有惊喜和福利哦！<br><a id="more"></a></p>
<The rest of contents | 余下全文>

<h3 id="项目搭建"><a href="#项目搭建" class="headerlink" title="项目搭建"></a>项目搭建</h3><ol>
<li>安装nodejs&gt;7.6,安装koa-generator</li>
<li>直接<code>koa2 spider</code>,生成项目</li>
<li>安装request,request-promise,cheerio,mkdirp</li>
<li>npm install安装依赖</li>
</ol>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>图片或者漫画爬虫的思路很简单，首先观察url的规律，把url按规律加入到下载任务，其实就是请求获得html内容，然后对html进行解析，找到下载的图片url（一般都是img标签的src属性值），把url放到数组保存，使用async await控制所有的任务，直到把所有的图片下载完。</p>
<h3 id="难点"><a href="#难点" class="headerlink" title="难点"></a>难点</h3><p>但是nodejs本身上异步的，如果你直接在for循环里去下载，肯定是不行的，必须控制好异步的执行上关键。<br>爬虫简单，处理好异步难。这里我使用的es7中async，await配合promise解决异步问题，还可以使用async模块，eventproxy，等等异步控制模块来解决。</p>
<h3 id="核心代码-spider-js"><a href="#核心代码-spider-js" class="headerlink" title="核心代码,spider.js"></a>核心代码,spider.js</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</div><div class="line"><span class="keyword">const</span> request = <span class="built_in">require</span>(<span class="string">"request-promise"</span>);</div><div class="line"><span class="keyword">const</span> cheerio = <span class="built_in">require</span>(<span class="string">"cheerio"</span>);</div><div class="line"><span class="keyword">const</span> mkdirp = <span class="built_in">require</span>(<span class="string">'mkdirp'</span>);</div><div class="line"><span class="keyword">const</span> config = <span class="built_in">require</span>(<span class="string">'../config'</span>);</div><div class="line">exports.download = <span class="keyword">async</span> <span class="function"><span class="keyword">function</span>(<span class="params">ctx, next</span>) </span>&#123;</div><div class="line">    <span class="keyword">const</span> dir = <span class="string">'images'</span>;</div><div class="line">    <span class="comment">// 图片链接地址</span></div><div class="line">    <span class="keyword">let</span> links = [];</div><div class="line">    <span class="comment">// 创建目录</span></div><div class="line">    mkdirp(dir);</div><div class="line">    <span class="keyword">var</span> urls = [];</div><div class="line">    <span class="keyword">let</span> tasks = [];</div><div class="line">    <span class="keyword">let</span> downloadTask = [];</div><div class="line">    <span class="keyword">let</span> url = config.url;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= config.size; i++) &#123;</div><div class="line">        <span class="keyword">let</span> link = url + <span class="string">'_'</span> + i + <span class="string">'.html'</span>;</div><div class="line">        <span class="keyword">if</span> (i == <span class="number">1</span>) &#123;</div><div class="line">            link = url + <span class="string">'.html'</span>;</div><div class="line">        &#125;</div><div class="line">        tasks.push(getResLink(i, link))</div><div class="line">    &#125;</div><div class="line">    links = <span class="keyword">await</span> <span class="built_in">Promise</span>.all(tasks)</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'links=========='</span>, links.length);</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; links.length; i++) &#123;</div><div class="line">        <span class="keyword">let</span> item = links[i];</div><div class="line">        <span class="keyword">let</span> index = item.split(<span class="string">'___'</span>)[<span class="number">0</span>];</div><div class="line">        <span class="keyword">let</span> src = item.split(<span class="string">'___'</span>)[<span class="number">1</span>];</div><div class="line">        downloadTask.push(downloadImg(src, dir, index + links[i].substr(<span class="number">-4</span>, <span class="number">4</span>)));</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">await</span> <span class="built_in">Promise</span>.all(downloadTask);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">downloadImg</span>(<span class="params">url, dir, filename</span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'download begin---'</span>, url);</div><div class="line">    request.get(url).pipe(fs.createWriteStream(dir + <span class="string">"/"</span> + filename)).on(<span class="string">'close'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'download success'</span>, url);</div><div class="line">    &#125;);</div><div class="line">&#125;</div><div class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">getResLink</span>(<span class="params">index, url</span>) </span>&#123;</div><div class="line">    <span class="keyword">const</span> body = <span class="keyword">await</span> request(url);</div><div class="line">    <span class="keyword">let</span> urls = [];</div><div class="line">    <span class="keyword">var</span> $ = cheerio.load(body);</div><div class="line">    $(config.rule).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> src = $(<span class="keyword">this</span>).attr(<span class="string">'src'</span>);</div><div class="line">        urls.push(src);</div><div class="line">    &#125;);</div><div class="line">    <span class="keyword">return</span> index + <span class="string">'___'</span> + urls[<span class="number">0</span>];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h3><p>由于爬虫的复杂性基于不同的网站，不同的任务很不一样，这里只是把几个常用的变量抽取到了config.js。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">    <span class="comment">//初始url</span></div><div class="line">    url: <span class="string">'http://www.xieet.com/meinv/230'</span>,</div><div class="line">    size: <span class="number">10</span>,</div><div class="line">    <span class="comment">// 选中图片img标签的选择器</span></div><div class="line">    rule: <span class="string">'.imgbox a img'</span></div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<h3 id="运行代码"><a href="#运行代码" class="headerlink" title="运行代码"></a>运行代码</h3><ol>
<li>下载我上传的代码<a href="https://github.com/maochunguang/koa-spider">koa-spider</a></li>
<li>npm install,npm start即可运行</li>
</ol>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>其实无论是写爬虫还是些其他程序，使用nodejs很大一部分都是要处理异步，要学好nodejs必须学好异步处理。</p>
<blockquote>
<p>如果文章对你有帮助,请去我的博客留个言吧! <a href="http://geeksblog.cc">我的博客</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 用koa2.x写下载漫画的爬虫：&lt;/strong&gt; &lt;Excerpt in index | 首页摘要&gt;&lt;br&gt;使用koa2.x的async ，await解决异步问题，写一个下载漫画的爬虫，代码里有惊喜和福利哦！&lt;br&gt;
    
    </summary>
    
      <category term="学习笔记" scheme="http://geeksblog.cc/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="nodejs" scheme="http://geeksblog.cc/tags/nodejs/"/>
    
  </entry>
  
  <entry>
    <title>微信公众号开发</title>
    <link href="http://geeksblog.cc/wechat-dev.html"/>
    <id>http://geeksblog.cc/wechat-dev.html</id>
    <published>2017-04-28T04:55:33.000Z</published>
    <updated>2017-05-14T00:05:45.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 微信公众号开发：</strong> <Excerpt in index | 首页摘要><br>微信公众号开发的一些注意事项<br><a id="more"></a></p>
<The rest of contents | 余下全文>

<h3 id="开发环境搭建"><a href="#开发环境搭建" class="headerlink" title="开发环境搭建"></a>开发环境搭建</h3><ol>
<li>微信公众号开发者配置，url，token，</li>
<li>本地调试，使用内网穿透工具，花生壳，或者netapp，买一个可以自定义域名的，内网映射到制定端口，</li>
<li>项目搭建，express或koa搭建项目，npm有微信的现成包，直接配置</li>
</ol>
<h3 id="回复"><a href="#回复" class="headerlink" title="回复"></a>回复</h3><ol>
<li>回复和发消息并没有什么特别注意的地方，这里不多说</li>
</ol>
<h3 id="菜单"><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h3><ol>
<li>微信菜单有自定义菜单，有个性化菜单，但是个性化菜单优先级高于个性化菜单</li>
<li>个性化菜单可以根据用户的tag，sex，group等属性进行区分菜单</li>
<li>注意，我在使用时发现<strong>个性化菜单经常会失效</strong>，不起作用，偶尔会起作用，如果线上打算使用个性化菜单，请慎重并仔细测试</li>
</ol>
<h3 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h3><p>授权有网页授权，js sdk授权，<br>网页授权也有两种，一个上静默授权，一个是点击授权，贴一下js sdk调用前认证的代码，要使用sha1加密<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">async</span> getSignConfig(originUrl) &#123;</div><div class="line">      <span class="keyword">let</span> data = &#123;&#125;</div><div class="line">      <span class="keyword">const</span> sha1 = crypto.createHash(<span class="string">'sha1'</span>)</div><div class="line">      <span class="keyword">const</span> appId = <span class="keyword">this</span>.app.config.weixin.appID</div><div class="line">      <span class="keyword">const</span> jsapi_ticket = <span class="keyword">await</span> <span class="keyword">this</span>.ctx.service.token.getJSApiTicket()</div><div class="line">      <span class="keyword">const</span> noncestr = <span class="keyword">this</span>.app.config.jsapi.noncestr</div><div class="line">      <span class="keyword">const</span> url = <span class="keyword">this</span>.app.config.domain + originUrl</div><div class="line">      <span class="keyword">const</span> timestamp = <span class="built_in">parseInt</span>(<span class="keyword">new</span> <span class="built_in">Date</span>().getTime() / <span class="number">1000</span>)</div><div class="line">      <span class="comment">// sha1加密</span></div><div class="line">      <span class="keyword">const</span> str = <span class="string">`jsapi_ticket=<span class="subst">$&#123;jsapi_ticket&#125;</span>&amp;noncestr=<span class="subst">$&#123;noncestr&#125;</span>&amp;timestamp=<span class="subst">$&#123;timestamp&#125;</span>&amp;url=<span class="subst">$&#123;url&#125;</span>`</span></div><div class="line">      sha1.update(str)</div><div class="line">      <span class="keyword">const</span> signature = sha1.digest(<span class="string">'hex'</span>)</div><div class="line">      data = &#123; jsapi_ticket, noncestr, timestamp, url, signature, appId &#125;</div><div class="line">      <span class="keyword">return</span> data</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>调用js sdk页面上代码<br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">wx.config(&#123;</div><div class="line">    debug: <span class="literal">false</span>, <span class="comment">// 开启调试模式,</span></div><div class="line">    appId: appId, <span class="comment">// 必填，公众号的唯一标识</span></div><div class="line">    timestamp: timestamp, <span class="comment">// 必填，生成签名的时间戳</span></div><div class="line">    nonceStr: nonceStr, <span class="comment">// 必填，生成签名的随机串</span></div><div class="line">    signature:  signature,<span class="comment">// 必填，签名，见附录1</span></div><div class="line">    jsApiList: [<span class="string">'closeWindow'</span>] <span class="comment">// 必填，需要使用的JS接口列表，所有JS接口列表见附录2</span></div><div class="line">&#125;);</div><div class="line">wx.ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">      wx.closeWindow();</div><div class="line">    &#125;,<span class="number">2000</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<h3 id="实用的常识"><a href="#实用的常识" class="headerlink" title="实用的常识"></a>实用的常识</h3><ol>
<li>tag不能重复创建，但是给用户可以重复打同一个tag</li>
<li>更改菜单一般五分钟生效，或者重新关注公众号，立马能看到</li>
<li>如果调用js sdk，务必使用https，防止因为安全问题，导致ios下js下载失败。如果你的服务是https，而引用了https的微信js，在ios下肯定会下载失败，这是ios的安全机制导致的。</li>
<li>微信关闭窗口的js接口，不管jsconfig验证是否通过，窗口都可以关闭</li>
<li>微信的token过期时间上2h，但是很多时候30分钟不到可能已经失效，建议<strong>把token过期时间设置为10分钟之内</strong></li>
</ol>
<h3 id="常见报错"><a href="#常见报错" class="headerlink" title="常见报错"></a>常见报错</h3><ol>
<li>创建菜单的时候，菜单长度不合法，仔细检查自己传的json菜单，一般都是<strong>json格式问题</strong>，而不是长度</li>
<li>redirect_uri不合法，是创建授权菜单的redirect_uri和<strong>网页授权域名</strong>配置不一样</li>
<li>关注公众号，服务端设置的欢迎消息发不过去，如果自己代码无异常，一般是因为<strong>token过期</strong></li>
</ol>
<h3 id="以后遇到其他问题继续补充"><a href="#以后遇到其他问题继续补充" class="headerlink" title="以后遇到其他问题继续补充"></a>以后遇到其他问题继续补充</h3><blockquote>
<p>如果文章对你有帮助,请去我的博客留个言吧! <a href="http://geeksblog.cc">我的博客</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 微信公众号开发：&lt;/strong&gt; &lt;Excerpt in index | 首页摘要&gt;&lt;br&gt;微信公众号开发的一些注意事项&lt;br&gt;
    
    </summary>
    
      <category term="javacript" scheme="http://geeksblog.cc/categories/javacript/"/>
    
    
      <category term="编程语言" scheme="http://geeksblog.cc/tags/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>Mac最实用快捷键</title>
    <link href="http://geeksblog.cc/mac-shortcut.html"/>
    <id>http://geeksblog.cc/mac-shortcut.html</id>
    <published>2017-04-21T02:53:08.000Z</published>
    <updated>2017-04-28T15:51:25.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Mac最实用快捷键：</strong> <Excerpt in index | 首页摘要><br>mac系统最常用的一些快捷键，吐血推荐<br><a id="more"></a></p>
<The rest of contents | 余下全文>

<h3 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h3><ul>
<li>打开文件／文件夹    cmd + o</li>
<li>选择文件／文件夹    文件夹名称（英文）</li>
<li>删除文件／文件夹    cmd + del</li>
<li>新建文件夹         cmd + shift + n</li>
<li>新建文件</li>
<li>预览文件           space</li>
<li>重命名             enter</li>
<li>文件目录前进后退        cmd + [ 或者 cmd + ]</li>
<li>文件上层目录，下层目录   cmd + ⬆️  cmd + ⬇️</li>
</ul>
<h3 id="搜索操作"><a href="#搜索操作" class="headerlink" title="搜索操作"></a>搜索操作</h3><p>全局搜索  ctrl + space<br>文本搜索  cmd + f</p>
<h3 id="mac-fn快捷键"><a href="#mac-fn快捷键" class="headerlink" title="mac fn快捷键"></a>mac fn快捷键</h3><p>屏幕亮度 f1 f2<br>任务视图 f3<br>应用程序 f4<br>键盘背光 f5 f6<br>音乐播放 f7 f8 f9<br>音量 f10 f11 f12</p>
<h3 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h3><blockquote>
<p>如果文章对你有帮助,请去我的博客留个言吧! <a href="http://geeksblog.cc">我的博客</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Mac最实用快捷键：&lt;/strong&gt; &lt;Excerpt in index | 首页摘要&gt;&lt;br&gt;mac系统最常用的一些快捷键，吐血推荐&lt;br&gt;
    
    </summary>
    
      <category term="开发工具" scheme="http://geeksblog.cc/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="mac" scheme="http://geeksblog.cc/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>Kobo Aura One配置入门</title>
    <link href="http://geeksblog.cc/kobo-config.html"/>
    <id>http://geeksblog.cc/kobo-config.html</id>
    <published>2017-04-17T02:22:57.000Z</published>
    <updated>2017-04-17T14:16:03.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Kobo Aura One配置入门：</strong> <Excerpt in index | 首页摘要><br>kobo电子书折腾记，从激活到设置，打补丁实现自定义配置，还是自己折腾起来有意思啊。<br><a id="more"></a></p>
<The rest of contents | 余下全文>

<h3 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h3><p>买电子书是为了阅读和学习，不是天天折腾电子书，一天刷一次机，如果只是看书，做笔记，学个英文什么的<br>原生系统是最好的。</p>
<h3 id="kobo原生系统的功能"><a href="#kobo原生系统的功能" class="headerlink" title="kobo原生系统的功能"></a>kobo原生系统的功能</h3><ol>
<li>格式支持epub，mobi，cbz漫画，txt，kobo epub格式</li>
<li>高亮，笔记，导出笔记（需要配置一下）</li>
<li>字典（英文，法文等多国字典，可以自己修改）</li>
<li>阅读pocket文章（大赞，堪比推送文章啊）</li>
</ol>
<h3 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h3><p><strong>说明：wifi激活需要翻墙，可以实用笔记连接vpn，然后共享wifi给kobo</strong></p>
<ol>
<li>wifi激活</li>
<li>kobo setup desktop激活</li>
</ol>
<h3 id="更新固件"><a href="#更新固件" class="headerlink" title="更新固件"></a>更新固件</h3><p>kobo的更新固件，更新补丁都是一个模式，把固件或者补丁放到.kobo文件夹，弹出设备就会自动重启</p>
<h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><p>电脑连接kobo，在根目录建立一个fonts文件夹，把需要的字体放进去即可</p>
<h3 id="词典"><a href="#词典" class="headerlink" title="词典"></a>词典</h3><p>下载网上改好的字典，直接放到.kobo文件夹下的dict目录下，然后重启就可以了</p>
<h3 id="自定义配置"><a href="#自定义配置" class="headerlink" title="自定义配置"></a>自定义配置</h3><ol>
<li>刷新页数</li>
<li>全屏模式</li>
<li>上下页宽</li>
<li>字体高级设置</li>
</ol>
<blockquote>
<p>如果文章对你有帮助,请去我的博客留个言吧! <a href="http://geeksblog.cc">我的博客</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Kobo Aura One配置入门：&lt;/strong&gt; &lt;Excerpt in index | 首页摘要&gt;&lt;br&gt;kobo电子书折腾记，从激活到设置，打补丁实现自定义配置，还是自己折腾起来有意思啊。&lt;br&gt;
    
    </summary>
    
      <category term="others" scheme="http://geeksblog.cc/categories/others/"/>
    
    
      <category term="开发工具" scheme="http://geeksblog.cc/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Mybooks</title>
    <link href="http://geeksblog.cc/mybooks.html"/>
    <id>http://geeksblog.cc/mybooks.html</id>
    <published>2017-04-15T06:49:46.000Z</published>
    <updated>2017-04-17T14:14:53.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Mybooks：</strong> <Excerpt in index | 首页摘要><br>人生漫漫，不知不觉读了好多书，但是仔细想想很多没有做总结，实在心里感觉缺失点东西，这次好好总结一下<br><a id="more"></a></p>
<The rest of contents | 余下全文>

<h3 id="读过哪些种类的"><a href="#读过哪些种类的" class="headerlink" title="读过哪些种类的"></a>读过哪些种类的</h3><ul>
<li>编程专业类</li>
<li>小说类</li>
<li>励志类</li>
</ul>
<h3 id="小说"><a href="#小说" class="headerlink" title="小说"></a>小说</h3><ul>
<li>平凡的世界</li>
<li>金庸武侠系列</li>
<li>古龙武侠小说</li>
<li>梁羽生武侠小说</li>
<li>余华作品集</li>
<li><p>雷米小说全集（侦探类）</p>
</li>
<li><p>网络小说：</p>
<ul>
<li>诛仙，</li>
<li>盗墓笔记，</li>
<li>泡沫之夏，</li>
<li>芈月传，</li>
</ul>
</li>
</ul>
<h3 id="编程类"><a href="#编程类" class="headerlink" title="编程类"></a>编程类</h3><ul>
<li>java编程思想</li>
<li>effective java</li>
<li>java并发编程的艺术</li>
<li>代码整洁之道</li>
<li><p>黑客与画家</p>
</li>
<li><p>深入浅出nodejs</p>
</li>
<li>nodejs实战</li>
<li>js高级程序设计</li>
<li>survivejs</li>
<li>redux和react中文手册</li>
<li>你不知道的javascript</li>
<li><p>算法javascript实现</p>
</li>
<li><p>mysql权威指南</p>
</li>
<li>mongodb权威指南</li>
<li>mongodb实战第二版</li>
<li>redis入门</li>
</ul>
<h3 id="经管励志"><a href="#经管励志" class="headerlink" title="经管励志"></a>经管励志</h3><ul>
<li>时间管理</li>
<li>一分钟系列</li>
<li>番茄工作法图解</li>
</ul>
<blockquote>
<p>如果文章对你有帮助,请去我的博客留个言吧! <a href="http://geeksblog.cc">我的博客</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Mybooks：&lt;/strong&gt; &lt;Excerpt in index | 首页摘要&gt;&lt;br&gt;人生漫漫，不知不觉读了好多书，但是仔细想想很多没有做总结，实在心里感觉缺失点东西，这次好好总结一下&lt;br&gt;
    
    </summary>
    
      <category term="book" scheme="http://geeksblog.cc/categories/book/"/>
    
    
      <category term="学习笔记" scheme="http://geeksblog.cc/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>异步那些事</title>
    <link href="http://geeksblog.cc/async-dev.html"/>
    <id>http://geeksblog.cc/async-dev.html</id>
    <published>2017-04-14T02:11:58.000Z</published>
    <updated>2017-05-13T23:15:18.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 异步那些事：</strong> <Excerpt in index | 首页摘要><br>在异步大行其道的今天，作为一个开发者你如果连异步都不了解，肯定会被同行看不清的，骚年还是学一下吧<br><a id="more"></a></p>
<The rest of contents | 余下全文>

<h3 id="异步简介"><a href="#异步简介" class="headerlink" title="异步简介`"></a>异步简介`</h3><h3 id="异步解决方案演变"><a href="#异步解决方案演变" class="headerlink" title="异步解决方案演变"></a>异步解决方案演变</h3><h3 id="promise"><a href="#promise" class="headerlink" title="promise"></a>promise</h3><h3 id="generator"><a href="#generator" class="headerlink" title="generator"></a>generator</h3><h3 id="async"><a href="#async" class="headerlink" title="async"></a>async</h3><blockquote>
<p>如果文章对你有帮助,请去我的博客留个言吧! <a href="http://geeksblog.cc">我的博客</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 异步那些事：&lt;/strong&gt; &lt;Excerpt in index | 首页摘要&gt;&lt;br&gt;在异步大行其道的今天，作为一个开发者你如果连异步都不了解，肯定会被同行看不清的，骚年还是学一下吧&lt;br&gt;
    
    </summary>
    
      <category term="编程语言" scheme="http://geeksblog.cc/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="node" scheme="http://geeksblog.cc/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>一个完整项目的得失</title>
    <link href="http://geeksblog.cc/fullprj-desc.html"/>
    <id>http://geeksblog.cc/fullprj-desc.html</id>
    <published>2017-04-11T02:18:22.000Z</published>
    <updated>2017-04-17T03:47:52.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 一个完整项目的得失：</strong> <Excerpt in index | 首页摘要><br>最近做了一个完整的java项目，感触颇深，写篇文章记录一下自己的得失<br><a id="more"></a></p>
<The rest of contents | 余下全文>

<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>今年从2月份到4月份做了一个完整到项目，后台cms系统，包括前台应用。写打造一个完美到系统，确实需要考虑太多因素，<br>自己收获颇多，特此总结一下。</p>
<h3 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h3><p>cms后台主要使用java的spring，mybits，shiro框架，前台就是jquery，jsp，bootstrap，<br>数据库方面是mysql，缓存没有使用</p>
<h3 id="数据库设计"><a href="#数据库设计" class="headerlink" title="数据库设计"></a>数据库设计</h3><p>使用mysql设计数据库，对业务的不深入很多时候会导致设置的表满足不了需求</p>
<ol>
<li>提前预留几个def空字段，这样不需要频繁的修改表结构</li>
<li>索引要建好，数据量增长起来后，没有索引搜索肯定慢的很，对常见的搜索条件建索引</li>
<li>对并发有个大致的数</li>
</ol>
<h3 id="nginx配置"><a href="#nginx配置" class="headerlink" title="nginx配置"></a>nginx配置</h3><ol>
<li>反向代理配置，代理80端口，代理域名访问</li>
<li>静态资源缓存，压缩</li>
<li>websocket配置，https配置</li>
<li>集群的负载均衡配置</li>
</ol>
<h3 id="tomcat配置"><a href="#tomcat配置" class="headerlink" title="tomcat配置"></a>tomcat配置</h3><ol>
<li>jvm参数设置</li>
<li>项目路径设置</li>
<li>日志，重启配置</li>
</ol>
<h3 id="安全问题"><a href="#安全问题" class="headerlink" title="安全问题"></a>安全问题</h3><ol>
<li>防止</li>
</ol>
<h3 id="选购服务器和域名"><a href="#选购服务器和域名" class="headerlink" title="选购服务器和域名"></a>选购服务器和域名</h3><ol>
<li>估算并发量，预留一定的并发量</li>
<li>根据并发量计算带宽和cpu还有内存</li>
<li>根据网络情况选择不同区域的服务器</li>
<li>根据需求选择域名</li>
</ol>
<h3 id="突发状况的处理机制"><a href="#突发状况的处理机制" class="headerlink" title="突发状况的处理机制"></a>突发状况的处理机制</h3><ol>
<li>选购的第三方接口挂了</li>
<li>数据库挂了</li>
<li>服务器挂了</li>
<li>网络异常</li>
</ol>
<blockquote>
<p>如果文章对你有帮助,请去我的博客留个言吧! <a href="http://geeksblog.cc">我的博客</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 一个完整项目的得失：&lt;/strong&gt; &lt;Excerpt in index | 首页摘要&gt;&lt;br&gt;最近做了一个完整的java项目，感触颇深，写篇文章记录一下自己的得失&lt;br&gt;
    
    </summary>
    
      <category term="编程语言" scheme="http://geeksblog.cc/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="java" scheme="http://geeksblog.cc/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>免费的开源书籍</title>
    <link href="http://geeksblog.cc/free-books.html"/>
    <id>http://geeksblog.cc/free-books.html</id>
    <published>2016-11-28T16:15:52.000Z</published>
    <updated>2016-11-30T23:47:25.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 免费的开源书籍：</strong> <Excerpt in index | 首页摘要><br>国外程序员在 stackoverflow 推荐的程序员必读书籍，中文版。<br><a id="more"></a></p>
<The rest of contents | 余下全文>

<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul>
<li><a href="#语言无关">语言无关</a><ul>
<li><a href="#ide">IDE</a></li>
<li><a href="#mysql">MySQL</a></li>
<li><a href="#nosql">NoSQL</a></li>
<li><a href="#postgresql">PostgreSQL</a></li>
<li><a href="#web">Web</a></li>
<li><a href="#web服务器">WEB服务器</a></li>
<li><a href="#其它">其它</a></li>
<li><a href="#函数式概念">函数式概念</a></li>
<li><a href="#分布式系统">分布式系统</a></li>
<li><a href="#在线教育">在线教育</a></li>
<li><a href="#大数据">大数据</a></li>
<li><a href="#操作系统">操作系统</a></li>
<li><a href="#数据库">数据库</a></li>
<li><a href="#智能系统">智能系统</a></li>
<li><a href="#正则表达式">正则表达式</a></li>
<li><a href="#版本控制">版本控制</a></li>
<li><a href="#程序员杂谈">程序员杂谈</a></li>
<li><a href="#管理和监控">管理和监控</a></li>
<li><a href="#编程艺术">编程艺术</a></li>
<li><a href="#编译原理">编译原理</a></li>
<li><a href="#编辑器">编辑器</a></li>
<li><a href="#计算机图形学">计算机图形学</a></li>
<li><a href="#设计模式">设计模式</a></li>
<li><a href="#软件开发方法">软件开发方法</a></li>
<li><a href="#项目相关">项目相关</a></li>
</ul>
</li>
<li><a href="#语言相关">语言相关</a><ul>
<li><a href="#android">Android</a></li>
<li><a href="#awk">AWK</a></li>
<li><a href="#c">C</a></li>
<li><a href="#c-sharp">C#</a></li>
<li><a href="#c-1">C++</a></li>
<li><a href="#coffeescript">CoffeeScript</a></li>
<li><a href="#dart">Dart</a></li>
<li><a href="#elasticsearch">Elasticsearch</a></li>
<li><a href="#elixir">Elixir</a></li>
<li><a href="#erlang">Erlang</a></li>
<li><a href="#fortran">Fortran</a></li>
<li><a href="#golang">Golang</a></li>
<li><a href="#haskell">Haskell</a></li>
<li><a href="#html--css">HTML / CSS</a></li>
<li><a href="#http">HTTP</a></li>
<li><a href="#ios">iOS</a></li>
<li><a href="#java">Java</a></li>
<li><a href="#javascript">JavaScript</a></li>
<li><a href="#latex">LaTeX</a></li>
<li><a href="#lisp">LISP</a></li>
<li><a href="#lua">Lua</a></li>
<li><a href="#markdown">Markdown</a></li>
<li><a href="#nodejs">Node.js</a></li>
<li><a href="#perl">Perl</a></li>
<li><a href="#php">PHP</a></li>
<li><a href="#python">Python</a></li>
<li><a href="#r">R</a></li>
<li><a href="#restructuredtext">reStructuredText</a></li>
<li><a href="#ruby">Ruby</a></li>
<li><a href="#rust">Rust</a></li>
<li><a href="#scala">Scala</a></li>
<li><a href="#scheme">Scheme</a></li>
<li><a href="#shell">Shell</a></li>
<li><a href="#swift">Swift</a></li>
<li><a href="#vim">Vim</a></li>
<li><a href="#visual-prolog">Visual Prolog</a></li>
</ul>
</li>
</ul>
<h2 id="语言无关"><a href="#语言无关" class="headerlink" title="语言无关"></a>语言无关</h2><h3 id="IDE"><a href="#IDE" class="headerlink" title="IDE"></a>IDE</h3><ul>
<li><a href="https://github.com/judasn/IntelliJ-IDEA-Tutorial">IntelliJ IDEA 简体中文专题教程</a></li>
</ul>
<h3 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h3><ul>
<li><a href="http://www.cnblogs.com/mr-wid/archive/2013/05/09/3068229.html">21分钟MySQL入门教程</a></li>
<li><a href="http://blog.codinglabs.org/articles/theory-of-mysql-index.html">MySQL索引背后的数据结构及算法原理</a></li>
</ul>
<h3 id="NoSQL"><a href="#NoSQL" class="headerlink" title="NoSQL"></a>NoSQL</h3><ul>
<li><a href="http://disquebook.com">Disque 使用教程</a></li>
<li><a href="http://neo4j.tw">Neo4j .rb 中文資源</a></li>
<li><a href="http://docs.neo4j.org.cn">Neo4j 简体中文手册 v1.8</a></li>
<li><a href="http://redisdoc.com">Redis 命令参考</a></li>
<li><a href="http://redisbook.com">Redis 设计与实现</a></li>
<li><a href="https://github.com/justinyhuang/the-little-mongodb-book-cn/blob/master/mongodb.md">The Little MongoDB Book</a></li>
<li><a href="https://github.com/JasonLai256/the-little-redis-book/blob/master/cn/redis.md">The Little Redis Book</a></li>
<li><a href="https://github.com/huangz1990/annotated_redis_source">带有详细注释的 Redis 2.6 代码</a></li>
<li><a href="https://github.com/huangz1990/redis-3.0-annotated">带有详细注释的 Redis 3.0 代码</a></li>
</ul>
<h3 id="PostgreSQL"><a href="#PostgreSQL" class="headerlink" title="PostgreSQL"></a>PostgreSQL</h3><ul>
<li><a href="http://works.jinbuguo.com/postgresql/menu823/index.html">PostgreSQL 8.2.3 中文文档</a></li>
<li><a href="http://www.postgres.cn/docs/9.3/index.html">PostgreSQL 9.3.1 中文文档</a></li>
</ul>
<h3 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h3><ul>
<li><a href="https://www.gitbook.com/book/juntao/3-web-designs-in-3-weeks/details">3 Web Designs in 3 Weeks</a></li>
<li><a href="https://github.com/CN-Chrome-DevTools/CN-Chrome-DevTools">Chrome 开发者工具中文手册</a></li>
<li><a href="http://open.chrome.360.cn/extension_dev/overview.html">Chrome扩展开发文档</a></li>
<li><a href="https://github.com/phodal/growth-ebook">Growth: 全栈增长工程师指南</a></li>
<li><a href="http://www.gruntjs.net">Grunt中文文档</a></li>
<li><a href="https://github.com/nimojs/gulp-book">Gulp 入门指南</a></li>
<li><a href="http://www.gulpjs.com.cn/docs/">gulp中文文档</a></li>
<li><a href="https://github.com/bolasblack/http-api-guide">HTTP 接口设计指北</a></li>
<li><a href="http://yuedu.baidu.com/ebook/478d1a62376baf1ffc4fad99?pn=1">HTTP/2.0 中文翻译</a></li>
<li><a href="https://www.gitbook.com/book/ye11ow/http2-explained/details">http2讲解</a></li>
<li><a href="https://github.com/darcyliu/google-styleguide/blob/master/JSONStyleGuide.md">JSON风格指南</a></li>
<li><a href="http://man.lupaworld.com/content/network/wireshark/index.html">Wireshark用户手册</a></li>
<li><a href="https://community.emc.com/thread/194901">一站式学习Wireshark</a></li>
<li><a href="http://www.20thingsilearned.com/zh-CN/home">关于浏览器和网络的 20 项须知</a></li>
<li><a href="http://coderlmn.github.io/code-standards/">前端代码规范 及 最佳实践</a></li>
<li><a href="https://github.com/fouber/blog/issues/2">前端开发体系建设日记</a></li>
<li><a href="https://github.com/hacke2/hacke2.github.io/issues/1">前端资源分享（一）</a></li>
<li><a href="https://github.com/hacke2/hacke2.github.io/issues/3">前端资源分享（二）</a></li>
<li><a href="http://deerchao.net/tutorials/regex/regex.htm">正则表达式30分钟入门教程</a></li>
<li><a href="http://jinlong.github.io/2013/08/29/devtoolsecrets/">浏览器开发工具的秘密</a></li>
<li><a href="https://github.com/AlloyTeam/Mars">移动Web前端知识库</a></li>
<li><a href="https://github.com/hoosin/mobile-web-favorites">移动前端开发收藏夹</a></li>
</ul>
<h3 id="WEB服务器"><a href="#WEB服务器" class="headerlink" title="WEB服务器"></a>WEB服务器</h3><ul>
<li><a href="http://works.jinbuguo.com/apache/menu22/index.html">Apache 中文手册</a></li>
<li><a href="http://tengine.taobao.org/book/index.html">Nginx开发从入门到精通</a> (淘宝团队出品)</li>
<li><a href="http://www.ttlsa.com/nginx/nginx-stu-pdf/">Nginx教程从入门到精通</a> (PDF版本，运维生存时间出品)</li>
</ul>
<h3 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h3><ul>
<li><a href="https://softwaredownload.gitbooks.io/openwrt-fanqiang/content/">OpenWrt智能、自动、透明翻墙路由器教程</a></li>
<li><a href="https://community.emc.com/docs/DOC-16067">SAN 管理入门系列</a></li>
<li><a href="http://sketchcn.com/sketch-chinese-user-manual.html#introduce">Sketch 中文手册</a></li>
<li><a href="http://ifeve.com/perfbook/">深入理解并行编程</a></li>
</ul>
<h3 id="函数式概念"><a href="#函数式概念" class="headerlink" title="函数式概念"></a>函数式概念</h3><ul>
<li><a href="https://github.com/justinyhuang/Functional-Programming-For-The-Rest-of-Us-Cn">傻瓜函数编程</a></li>
</ul>
<h3 id="分布式系统"><a href="#分布式系统" class="headerlink" title="分布式系统"></a>分布式系统</h3><ul>
<li><a href="http://dcaoyuan.github.io/papers/pdfs/Scalability.pdf">走向分布式</a> (PDF)</li>
</ul>
<h3 id="在线教育"><a href="#在线教育" class="headerlink" title="在线教育"></a>在线教育</h3><ul>
<li><a href="http://edu.51cto.com">51CTO学院</a></li>
<li><a href="https://www.codecademy.com/?locale_code=zh">Codecademy</a></li>
<li><a href="https://www.codeschool.com">CodeSchool</a></li>
<li><a href="https://www.coursera.org/courses?orderby=upcoming&amp;lngs=zh">Coursera</a></li>
<li><a href="https://learnxinyminutes.com">Learn X in Y minutes</a> (数十种语言快速入门教程)</li>
<li><a href="https://www.shiyanlou.com">shiyanlou</a></li>
<li><a href="https://teamtreehouse.com">TeamTreeHouse</a></li>
<li><a href="https://www.udacity.com">Udacity</a></li>
<li><a href="https://www.xuetangx.com">xuetangX</a></li>
<li><a href="http://www.imooc.com/course/list">慕课网</a> (丰富的移动端开发、php开发、web前端、html5教程以及css3视频教程等课程资源)</li>
<li><a href="http://www.jikexueyuan.com">极客学院</a></li>
<li><a href="http://www.jisuanke.com">计蒜客</a></li>
</ul>
<h3 id="大数据"><a href="#大数据" class="headerlink" title="大数据"></a>大数据</h3><ul>
<li><a href="https://aiyanbo.gitbooks.io/spark-programming-guide-zh-cn/content/">Spark 编程指南简体中文版</a></li>
<li><a href="https://code.csdn.net/CODE_Translation/spark_matei_phd">大型集群上的快速和通用数据处理架构</a></li>
<li><a href="https://github.com/Flowerowl/Big-Data-Resources">大数据/数据挖掘/推荐系统/机器学习相关资源</a></li>
<li><a href="https://github.com/linyiqun/DataMiningAlgorithm">数据挖掘中经典的算法实现和详细的注释</a></li>
<li><a href="http://dataminingguide.books.yourtion.com">面向程序员的数据挖掘指南</a></li>
</ul>
<h3 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h3><ul>
<li><a href="http://man.chinaunix.net/linux/debian/reference/reference.zh-cn.html">Debian 参考手册 </a></li>
<li><a href="https://github.com/yeasy/docker_practice">Docker —— 从入门到实践</a></li>
<li><a href="https://github.com/widuu/chinese_docker">Docker中文指南</a></li>
<li><a href="http://yuedu.baidu.com/ebook/d817967416fc700abb68fca1">Docker入门实战</a></li>
<li><a href="http://www.freebsd.org/doc/zh_CN.UTF-8/books/handbook/">FreeBSD 使用手册</a></li>
<li><a href="http://freeradius.akagi201.org">FreeRADIUS新手入门</a></li>
<li><a href="https://tinylab.gitbooks.io/linux-doc/content/zh-cn/">Linux Documentation (中文版)</a></li>
<li><a href="http://happypeter.github.io/LGCB/book/">Linux Guide for Complete Beginners</a></li>
<li><a href="http://works.jinbuguo.com/lfs/lfs62/index.html">Linux 构建指南</a></li>
<li><a href="http://sourceforge.net/projects/elpi/">Linux 系统高级编程</a></li>
<li><a href="https://github.com/me115/linuxtools_rst">Linux工具快速教程</a></li>
<li><a href="https://aaaaaashu.gitbooks.io/mac-dev-setup/content/">Mac 开发配置手册</a></li>
<li><a href="http://pages.cs.wisc.edu/~remzi/OSTEP/">Operating Systems: Three Easy Pieces</a></li>
<li><a href="http://billie66.github.io/TLCL/index.html">The Linux Command Line</a> (中英文版)</li>
<li><a href="http://wiki.ubuntu.org.cn/UbuntuManual">Ubuntu 参考手册 </a></li>
<li><a href="https://www.gitbook.com/book/objectkuan/ucore-docs/details">uCore Lab: Operating System Course in Tsinghua University</a></li>
<li><a href="http://cb.vu/unixtoolbox_zh_CN.xhtml">UNIX TOOLBOX</a></li>
<li><a href="https://github.com/jlevy/the-art-of-command-line/blob/master/README-zh.md">命令行的艺术</a></li>
<li><a href="https://tinylab.gitbooks.io/elinux/content/zh/">嵌入式 Linux 知识库 (eLinux.org 中文版)</a></li>
<li><a href="http://i.linuxtoy.org/docs/guide/index.html">开源世界旅行手册</a></li>
<li><a href="http://www.kerneltravel.net/kernel-book/%E6%B7%B1%E5%85%A5%E5%88%86%E6%9E%90Linux%E5%86%85%E6%A0%B8%E6%BA%90%E7%A0%81.html">深入分析Linux内核源码</a></li>
<li><a href="https://github.com/tobegit3hub/understand_linux_process">理解Linux进程</a></li>
<li><a href="http://vbird.dic.ksu.edu.tw/linux_basic/linux_basic.php">鸟哥的 Linux 私房菜 基础学习篇</a></li>
<li><a href="http://vbird.dic.ksu.edu.tw/linux_server/">鸟哥的 Linux 私房菜 服务器架设篇</a></li>
</ul>
<h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><ul>
<li><a href="http://redisbook.com">Redis 设计与实现</a></li>
<li><a href="https://github.com/justinyhuang/the-little-mongodb-book-cn">The Little MongoDB Book 中文版</a></li>
</ul>
<h3 id="智能系统"><a href="#智能系统" class="headerlink" title="智能系统"></a>智能系统</h3><ul>
<li><a href="https://github.com/phodal/designiot">一步步搭建物联网系统</a></li>
</ul>
<h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><ul>
<li><a href="http://deerchao.net/tutorials/regex/regex.htm">正则表达式30分钟入门教程</a></li>
</ul>
<h3 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h3><ul>
<li><a href="http://rogerdudler.github.io/git-guide/index.zh.html">Git - 简易指南</a></li>
<li><a href="https://github.com/flyhigher139/Git-Cheat-Sheet">Git-Cheat-Sheet</a> （感谢 @flyhigher139 翻译了中文版）</li>
<li><a href="http://gitbook.liuhui998.com">Git Community Book 中文版</a></li>
<li><a href="http://danielkummer.github.io/git-flow-cheatsheet/index.zh_CN.html">git-flow 备忘清单</a></li>
<li><a href="http://www-cs-students.stanford.edu/~blynn/gitmagic/intl/zh_cn/">Git magic</a></li>
<li><a href="http://www-cs-students.stanford.edu/~blynn/gitmagic/intl/zh_cn/">Git Magic</a></li>
<li><a href="http://gitref.justjavac.com">Git 参考手册</a></li>
<li><a href="https://github.com/waylau/github-help">Github帮助文档</a></li>
<li><a href="https://snowdream86.gitbooks.io/github-cheat-sheet/content/zh/">GitHub秘籍</a></li>
<li><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000">Git教程</a> （本文由 <a href="http://weibo.com/liaoxuefeng">@廖雪峰</a> 创作，如果觉得本教程对您有帮助，可以去 <a href="https://itunes.apple.com/cn/app/git-jiao-cheng/id876420437">iTunes</a> 购买）</li>
<li><a href="https://github.com/gotgit/gotgithub">Got GitHub</a></li>
<li><a href="http://www.worldhello.net/gotgithub/index.html">GotGitHub</a></li>
<li><a href="http://bucunzai.net/hginit/">HgInit (中文版)</a></li>
<li><a href="https://www.mercurial-scm.org/wiki/ChineseTutorial">Mercurial 使用教程</a></li>
<li><a href="https://git-scm.com/book/zh/v2">Pro Git</a></li>
<li><a href="https://www.gitbook.com/book/0532/progit/details">Pro Git 中文版</a> (整理在gitbook上)</li>
<li><a href="http://svnbook.red-bean.com/nightly/zh/index.html">svn 手册</a></li>
<li><a href="http://pcottle.github.io/learnGitBranching/">学习 Git 分支</a> (点击右下角按钮可切换至简体及正体中文)</li>
<li><a href="http://igit.linuxtoy.org/index.html">沉浸式学 Git</a></li>
<li><a href="http://backlogtool.com/git-guide/cn/">猴子都能懂的GIT入门</a></li>
</ul>
<h3 id="程序员杂谈"><a href="#程序员杂谈" class="headerlink" title="程序员杂谈"></a>程序员杂谈</h3><ul>
<li><a href="http://www.kancloud.cn/kancloud/a-programmer-prepares">程序员的自我修养</a></li>
</ul>
<h3 id="管理和监控"><a href="#管理和监控" class="headerlink" title="管理和监控"></a>管理和监控</h3><ul>
<li><a href="https://www.gitbook.com/book/fuxiaopang/learnelasticsearch/details">ElasticSearch 权威指南</a></li>
<li><a href="http://es.xiaoleilu.com">Elasticsearch 权威指南（中文版）</a></li>
<li><a href="http://kibana.logstash.es">ELKstack 中文指南</a></li>
<li><a href="https://github.com/chenryn/logstash-best-practice-cn">Logstash 最佳实践</a></li>
<li><a href="http://udn.yyuap.com/doc/mastering-elasticsearch/">Mastering Elasticsearch(中文版)</a></li>
<li><a href="http://bbs.konotes.org/workdoc/puppet-27/">Puppet 2.7 Cookbook 中文版</a></li>
</ul>
<h3 id="编程艺术"><a href="#编程艺术" class="headerlink" title="编程艺术"></a>编程艺术</h3><ul>
<li><a href="http://read.douban.com/ebook/4972883/">取悦的工序：如何理解游戏</a> (豆瓣阅读，免费书籍)</li>
<li><a href="http://www.oschina.net/translate/what-every-programmer-should-know-about-memory-part1?print">每个程序员都应该了解的内存知识(译)</a>【第一部分】</li>
<li><a href="https://github.com/julycoding/The-Art-Of-Programming-by-July">程序员编程艺术</a></li>
<li><a href="http://www.kancloud.cn/kancloud/intro-to-prog/52592">编程入门指南</a></li>
</ul>
<h3 id="编译原理"><a href="#编译原理" class="headerlink" title="编译原理"></a>编译原理</h3><ul>
<li><a href="https://github.com/DeathKing/Learning-SICP">《计算机程序的结构和解释》公开课 翻译项目</a></li>
</ul>
<h3 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h3><ul>
<li><a href="http://exvim.github.io/docs-zh/intro/">exvim–vim 改良成IDE项目</a></li>
<li><a href="https://github.com/vimcn/vimcdoc">Vim中文文档</a></li>
<li><a href="https://github.com/yangyangwithgnu/use_vim_as_ide">所需即所获：像 IDE 一样使用 vim</a></li>
<li><a href="http://learnvimscriptthehardway.onefloweroneworld.com">笨方法学Vimscript 中译本</a></li>
</ul>
<h3 id="计算机图形学"><a href="#计算机图形学" class="headerlink" title="计算机图形学"></a>计算机图形学</h3><ul>
<li><a href="https://github.com/zilongshanren/opengl-tutorials">OpenGL 教程</a></li>
</ul>
<h3 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h3><ul>
<li><a href="http://blog.csdn.net/lovelion/article/details/17517213">史上最全设计模式导学目录</a></li>
<li><a href="https://github.com/me115/design_patterns">图说设计模式</a></li>
</ul>
<h3 id="软件开发方法"><a href="#软件开发方法" class="headerlink" title="软件开发方法"></a>软件开发方法</h3><ul>
<li><a href="https://github.com/justinyhuang/Functional-Programming-For-The-Rest-of-Us-Cn">傻瓜函数编程</a> (《Functional Programming For The Rest of Us》中文版)</li>
<li><a href="http://www.infoq.com/cn/minibooks/scrum-xp-from-the-trenches">硝烟中的 Scrum 和 XP</a></li>
</ul>
<h3 id="项目相关"><a href="#项目相关" class="headerlink" title="项目相关"></a>项目相关</h3><ul>
<li><a href="http://docs.huihoo.com/gnu/linux/gmake.html">GNU make 指南</a></li>
<li><a href="https://github.com/waylau/Gradle-2-User-Guide">Gradle 2 用户指南</a></li>
<li><a href="http://yuedu.baidu.com/ebook/f23af265998fcc22bcd10da2">Gradle 中文使用文档</a></li>
<li><a href="http://local.joelonsoftware.com/wiki/Chinese_(Simplified">Joel谈软件</a>)</li>
<li><a href="https://github.com/fool2fish/selenium-doc">selenium 中文文档</a></li>
<li><a href="http://www.ituring.com.cn/book/1143">开源软件架构</a></li>
<li><a href="http://article.yeeyan.org/view/2251/94882">持续集成（第二版）</a> (译言网)</li>
<li><a href="http://local.joelonsoftware.com/wiki/%E9%A6%96%E9%A0%81">約耳談軟體(Joel on Software)</a></li>
<li><a href="https://github.com/ecomfe/spec">编码规范</a></li>
<li><a href="http://www.ibm.com/developerworks/cn/java/j-ap/">让开发自动化系列专栏</a></li>
<li><a href="http://www.ibm.com/developerworks/cn/java/j-cq/">追求代码质量</a></li>
</ul>
<h2 id="语言相关"><a href="#语言相关" class="headerlink" title="语言相关"></a>语言相关</h2><h3 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h3><ul>
<li><a href="http://www.apkbus.com/design/index.html">Android Design(中文版)</a></li>
<li><a href="https://github.com/CharonChui/AndroidNote">Android Note(开发过程中积累的知识点)</a></li>
<li><a href="http://leanote.com/blog/post/561658f938f41126b2000298?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io">Android6.0新特性详解</a></li>
<li><a href="http://stormzhang.github.io/android/2014/07/07/learn-android-from-rookie/">Android学习之路</a></li>
<li><a href="https://github.com/bboyfeiyu/android-tech-frontier">Android开发技术前线(android-tech-frontier)</a></li>
<li><a href="http://hukai.me/android-training-course-in-chinese/index.html">Google Android官方培训课程中文版</a></li>
<li>Google Material Design 正體中文版 (<a href="https://wcc723.gitbooks.io/google_design_translate/content/style-icons.html">译本一</a> <a href="https://github.com/1sters/material_design_zh">译本二</a>)</li>
<li><a href="http://wiki.jikexueyuan.com/project/material-design/">Material Design 中文版</a></li>
<li><a href="https://github.com/FX-Max/Point-of-Android">Point-of-Android</a> Android 一些重要知识点解析整理</li>
</ul>
<h3 id="AWK"><a href="#AWK" class="headerlink" title="AWK"></a>AWK</h3><ul>
<li><a href="http://awk.readthedocs.org/en/latest/index.html">awk中文指南</a></li>
<li><a href="https://github.com/wuzhouhui/awk">awk程序设计语言</a></li>
</ul>
<h3 id="C"><a href="#C" class="headerlink" title="C"></a>C</h3><ul>
<li><a href="http://c-faq-chn.sourceforge.net/ccfaq/ccfaq.html">C 语言常见问题集</a></li>
<li><a href="http://doc.lellansin.com">C/C++ 学习教程</a></li>
<li><a href="http://docs.linuxtone.org/ebooks/C&amp;CPP/c/">Linux C 编程一站式学习</a></li>
<li><a href="https://github.com/limingth/NCCL">新概念 C 语言教程</a></li>
</ul>
<h3 id="C-Sharp"><a href="#C-Sharp" class="headerlink" title="C Sharp"></a>C Sharp</h3><ul>
<li><a href="http://book.douban.com/subject/24827879/">精通C#(第6版) </a></li>
</ul>
<h3 id="C-1"><a href="#C-1" class="headerlink" title="C++"></a>C++</h3><ul>
<li><a href="https://github.com/hellogcc/100-gcc-tips/blob/master/src/index.md">100个gcc小技巧</a></li>
<li><a href="https://github.com/hellogcc/100-gdb-tips/blob/master/src/index.md">100个gdb小技巧</a></li>
<li><a href="https://tinylab.gitbooks.io/cbook/content/">C 语言编程透视</a></li>
<li><a href="https://github.com/andycai/cprimer">C/C++ Primer</a> - @andycai</li>
<li><a href="http://www.sunistudio.com/cppfaq/">C++ FAQ LITE(中文版)</a></li>
<li><a href="https://github.com/Mooophy/Cpp-Primer">C++ Primer 5th Answers</a></li>
<li><a href="https://github.com/wuye9036/CppTemplateTutorial">C++ Template 进阶指南</a></li>
<li><a href="http://www.prglab.com/cms/">C++ 基础教程</a></li>
<li><a href="https://chenxiaowei.gitbooks.io/cpp_concurrency_in_action/content/">C++ 并发编程(基于C++11)</a></li>
<li><a href="https://github.com/forhappy/Cplusplus-Concurrency-In-Practice">C++ 并发编程指南</a></li>
<li><a href="https://github.com/leeyiw/cgdb-manual-in-chinese">CGDB中文手册</a></li>
<li><a href="http://sewm.pku.edu.cn/src/paradise/reference/CMake%20Practice.pdf">Cmake 实践</a> (PDF版)</li>
<li><a href="http://docs.huihoo.com/gnu/linux/gmake.html">GNU make 指南</a></li>
<li><a href="http://zh-google-styleguide.readthedocs.org/en/latest/google-cpp-styleguide/contents/">Google C++ 风格指南</a></li>
<li><a href="http://www.kuqin.com/qtdocument/tutorial.html">QT 教程</a></li>
<li><a href="https://github.com/anjuke/zguide-cn">ZMQ 指南</a></li>
<li><a href="http://www.ituring.com.cn/book/1203">像计算机科学家一样思考（C++版)</a> (《How To Think Like a Computer Scientist: C++ Version》中文版)</li>
<li><a href="http://www.nowamagic.net/librarys/books/contents/c">简单易懂的C魔法</a></li>
<li><a href="http://scc.qibebt.cas.cn/docs/linux/base/%B8%FA%CE%D2%D2%BB%C6%F0%D0%B4Makefile-%B3%C2%F0%A9.pdf">跟我一起写Makefile(PDF)</a> (PDF)</li>
</ul>
<h3 id="CoffeeScript"><a href="#CoffeeScript" class="headerlink" title="CoffeeScript"></a>CoffeeScript</h3><ul>
<li><a href="http://coffee-script.org">CoffeeScript 中文</a></li>
<li><a href="https://github.com/elrrrrrrr/coffeescript-style-guide/blob/master/README-ZH.md">CoffeeScript 编程风格指南</a></li>
</ul>
<h3 id="Dart"><a href="#Dart" class="headerlink" title="Dart"></a>Dart</h3><ul>
<li><a href="http://dart.lidian.info/wiki/Language_Tour">Dart 语言导览</a></li>
</ul>
<h3 id="Elasticsearch"><a href="#Elasticsearch" class="headerlink" title="Elasticsearch"></a>Elasticsearch</h3><ul>
<li><a href="https://github.com/looly/elasticsearch-definitive-guide-cn">Elasticsearch 权威指南</a> （《Elasticsearch the definitive guide》中文版）</li>
<li><a href="http://kibana.logstash.es">ELKstack 中文指南</a></li>
<li><a href="http://udn.yyuap.com/doc/mastering-elasticsearch/">Mastering Elasticsearch(中文版)</a></li>
</ul>
<h3 id="Elixir"><a href="#Elixir" class="headerlink" title="Elixir"></a>Elixir</h3><ul>
<li><a href="https://github.com/Ljzn/ElixrGettingStartedChinese">Elixir Getting Started 中文翻译</a></li>
<li><a href="https://elixirschool.com/cn/">Elixir 编程语言教程</a> (Elixir School)</li>
<li><a href="https://github.com/Ljzn/MetaProgrammingInElixirChinese">Elixir元编程与DSL 中文翻译</a></li>
<li><a href="https://mydearxym.gitbooks.io/phoenix-doc-in-chinese/content/">Phoenix 框架中文文档</a></li>
</ul>
<h3 id="Erlang"><a href="#Erlang" class="headerlink" title="Erlang"></a>Erlang</h3><ul>
<li><a href="https://github.com/liancheng/cpie-cn">Erlang 并发编程</a> (《Concurrent Programming in Erlang (Part I)》中文版)</li>
</ul>
<h3 id="Fortran"><a href="#Fortran" class="headerlink" title="Fortran"></a>Fortran</h3><ul>
<li><a href="http://micro.ustc.edu.cn/Fortran/ZJDing/">Fortran77和90/95编程入门</a></li>
</ul>
<h3 id="Golang"><a href="#Golang" class="headerlink" title="Golang"></a>Golang</h3><ul>
<li><a href="http://www.hellogcc.org/effective_go.html">Effective Go</a></li>
<li><a href="https://github.com/astaxie/build-web-application-with-golang">Go Web 编程</a></li>
<li><a href="https://github.com/Unknwon/the-way-to-go_ZH_CN">Go 入门指南</a> (《The Way to Go》中文版)</li>
<li><a href="https://github.com/golang-china/golangdoc.translations">Go 官方文档翻译</a></li>
<li><a href="http://go-tour-zh.appsp0t.com">Go 指南</a> (《A Tour of Go》中文版)</li>
<li><a href="https://github.com/songleo/the-little-go-book_ZH_CN">Go 简易教程</a> (《<a href="https://github.com/karlseguin/the-little-go-book">The Little Go Book</a>》中文版)</li>
<li><a href="https://github.com/Unknwon/go-fundamental-programming">Go 编程基础</a></li>
<li><a href="https://github.com/polaris1119/The-Golang-Standard-Library-by-Example">Go 语言标准库</a></li>
<li><a href="https://github.com/hyper-carrot/go_command_tutorial">Go命令教程</a></li>
<li><a href="https://github.com/astaxie/Go-in-Action">Go实战开发</a></li>
<li><a href="https://github.com/achun/Go-Blog-In-Action">Go语言博客实践</a></li>
<li><a href="http://blog.csdn.net/dc_726/article/details/46565241">Java程序员的Golang入门指南</a></li>
<li><a href="https://github.com/astaxie/NPWG_zh">Network programming with Go 中文翻译版本</a></li>
<li><a href="http://gorevel.cn/docs/manual/index.html">Revel 框架手册</a></li>
<li><a href="http://mikespook.com/learning-go/">学习Go语言</a></li>
</ul>
<h3 id="Groovy"><a href="#Groovy" class="headerlink" title="Groovy"></a>Groovy</h3><ul>
<li><a href="http://www.ibm.com/developerworks/cn/java/j-pg/">实战 Groovy 系列</a></li>
</ul>
<h3 id="Haskell"><a href="#Haskell" class="headerlink" title="Haskell"></a>Haskell</h3><ul>
<li><a href="http://learnyoua.haskell.sg">Haskell 趣学指南</a></li>
<li><a href="http://cnhaskell.com">Real World Haskell 中文版</a></li>
</ul>
<h3 id="HTML-CSS"><a href="#HTML-CSS" class="headerlink" title="HTML / CSS"></a>HTML / CSS</h3><ul>
<li><a href="https://github.com/waylau/css3-tutorial">CSS3 Tutorial 《CSS3 教程》</a></li>
<li><a href="http://css.doyoe.com">CSS参考手册</a></li>
<li><a href="http://yanxyz.github.io/emmet-docs/">Emmet 文档</a></li>
<li><a href="http://www.w3school.com.cn/html5/">HTML5 教程</a></li>
<li><a href="http://codeguide.bootcss.com">HTML和CSS编码规范</a></li>
<li><a href="http://sass-guidelin.es/zh/">Sass Guidelines 中文</a></li>
<li><a href="http://alloyteam.github.io/CodeGuide/">前端代码规范</a> (腾讯 AlloyTeam 团队)</li>
<li><a href="http://zh.learnlayout.com">学习CSS布局</a></li>
<li><a href="https://github.com/chadluo/CSS-Guidelines/blob/master/README.md">通用 CSS 笔记、建议与指导</a></li>
</ul>
<h3 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h3><ul>
<li><a href="http://nilsun.github.io/apple-watch/">Apple Watch开发初探</a></li>
<li><a href="http://zh-google-styleguide.readthedocs.org/en/latest/google-objc-styleguide/">Google Objective-C Style Guide 中文版</a></li>
<li><a href="http://isux.tencent.com/ios-human-interface-guidelines-ui-design-basics-ios7.html">iOS7人机界面指南</a></li>
<li><a href="https://github.com/qinjx/30min_guides/blob/master/ios.md">iOS开发60分钟入门</a></li>
<li><a href="http://wileam.com/iphone-6-screen-cn/">iPhone 6 屏幕揭秘</a></li>
<li><a href="https://github.com/jkyin/Subtitle">网易斯坦福大学公开课：iOS 7应用开发字幕文件</a></li>
</ul>
<h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><ul>
<li><a href="https://github.com/waylau/activiti-5.x-user-guide">Activiti 5.x 用户指南</a></li>
<li><a href="https://github.com/waylau/apache-mina-2.x-user-guide">Apache MINA 2 用户指南</a></li>
<li><a href="https://github.com/waylau/apache-shiro-1.2.x-reference">Apache Shiro 用户指南</a></li>
<li><a href="http://www.hawstein.com/posts/google-java-style.html">Google Java编程风格指南</a></li>
<li><a href="https://github.com/waylau/h2-database-doc">H2 Database 教程</a></li>
<li><a href="https://github.com/waylau/servlet-3.1-specification">Java Servlet 3.1 规范</a></li>
<li><a href="https://github.com/waylau/java-code-conventions">Java 编码规范</a></li>
<li><a href="https://github.com/waylau/Jersey-2.x-User-Guide">Jersey 2.x 用户指南</a></li>
<li><a href="https://github.com/waylau/jsse-reference-guide">JSSE 参考指南</a></li>
<li><a href="http://mybatis.github.io/mybatis-3/zh/index.html">MyBatis中文文档</a></li>
<li><a href="https://github.com/waylau/netty-4-user-guide">Netty 4.x 用户指南</a></li>
<li><a href="https://github.com/waylau/essential-netty-in-action">Netty 实战(精髓)</a></li>
<li><a href="https://github.com/waylau/rest-in-action">REST 实战</a></li>
<li><a href="https://github.com/qibaoguang/Spring-Boot-Reference-Guide">Spring Boot参考指南</a> (翻译中)</li>
<li><a href="https://github.com/waylau/spring-framework-4-reference">Spring Framework 4.x参考文档</a></li>
<li><a href="https://github.com/waylau/RestDemo">用jersey构建REST服务</a></li>
</ul>
<h3 id="Javascript"><a href="#Javascript" class="headerlink" title="Javascript"></a>Javascript</h3><ul>
<li><a href="https://github.com/adamlu/javascript-style-guide">Airbnb JavaScript 规范</a></li>
<li>AngularJS<ul>
<li><a href="https://github.com/peiransun/angularjs-cn">AngularJS中译本</a></li>
<li><a href="https://github.com/zensh/AngularjsTutorial_cn">AngularJS入门教程</a></li>
<li><a href="https://github.com/mgechev/angularjs-style-guide/blob/master/README-zh-cn.md">AngularJS最佳实践和风格指南</a></li>
<li><a href="http://www.waylau.com/build-angularjs-app-with-yeoman-in-windows/">在Windows环境下用Yeoman构建AngularJS项目</a></li>
<li><a href="https://github.com/xufei/Make-Your-Own-AngularJS/blob/master/01.md">构建自己的AngularJS</a></li>
</ul>
</li>
<li>backbone.js<ul>
<li><a href="http://www.css88.com/doc/backbone/">backbone.js中文文档</a></li>
<li><a href="http://www.the5fire.com/backbone-js-tutorials-pdf-download.html">backbone.js入门教程</a> (PDF)</li>
<li><a href="https://github.com/the5fire/backbonejs-learning-note">Backbone.js入门教程第二版</a></li>
<li><a href="http://feliving.github.io/developing-backbone-applications">Developing Backbone.js Applications(中文版)</a></li>
</ul>
</li>
<li><a href="http://www.ituring.com.cn/minibook/950">Chrome扩展及应用开发</a></li>
<li>CoffeeScript<ul>
<li><a href="https://github.com/geekplux/coffeescript-style-guide">CoffeeScript 编码风格指南</a></li>
</ul>
</li>
<li>D3.js<ul>
<li><a href="http://www.ourd3js.com/wordpress/?cat=2">D3.js 入门系列</a> (还有进阶、高级等系列)</li>
<li><a href="https://github.com/mbostock/d3/wiki/API--%E4%B8%AD%E6%96%87%E6%89%8B%E5%86%8C">官方API文档</a></li>
<li><a href="http://blog.csdn.net/zhang__tianxu/article/category/1623437">张天旭的D3教程</a></li>
<li><a href="http://www.cnblogs.com/winleisure/tag/D3.js/">楚狂人的D3教程</a></li>
</ul>
</li>
<li><a href="http://es6.ruanyifeng.com">ECMAScript 6 入门</a> (作者：阮一峰)</li>
<li>ExtJS<ul>
<li><a href="http://extjs-doc-cn.github.io/ext4api/">Ext4.1.0 中文文档</a></li>
</ul>
</li>
<li><a href="http://bq69.com/blog/articles/script/868/google-javascript-style-guide.html">Google JavaScript 代码风格指南</a></li>
<li><a href="https://github.com/darcyliu/google-styleguide/blob/master/JSONStyleGuide.md">Google JSON 风格指南</a></li>
<li>impress.js<ul>
<li><a href="https://github.com/kokdemo/impress.js-tutorial-in-Chinese">impress.js的中文教程</a></li>
</ul>
</li>
<li><a href="http://liubin.github.io/promises-book/">JavaScript Promise迷你书</a></li>
<li><a href="http://typeof.net/s/jsmech/">Javascript 原理</a></li>
<li><a href="http://javascript.ruanyifeng.com">JavaScript 标准参考教程（alpha）</a></li>
<li><a href="https://github.com/jayli/javascript-patterns">《JavaScript 模式》</a> “JavaScript patterns”中译本</li>
<li><a href="https://github.com/justjavac/12-javascript-quirks">javascript 的 12 个怪癖</a></li>
<li><a href="http://bonsaiden.github.io/JavaScript-Garden/zh/">JavaScript 秘密花园</a></li>
<li><a href="http://icodeit.org/jsccp/">JavaScript核心概念及实践</a> (PDF) (此书已由人民邮电出版社出版发行，但作者依然免费提供PDF版本，希望开发者们去购买，支持作者)</li>
<li><a href="http://pij.robinqu.me">Javascript编程指南</a> (<a href="https://github.com/RobinQu/Programing-In-Javascript">源码</a>)</li>
<li>jQuery<ul>
<li><a href="http://i5ting.github.io/How-to-write-jQuery-plugin/build/jquery.plugin.html">How to write jQuery plugin</a></li>
<li><a href="http://www.nowamagic.net/librarys/books/contents/jquery">简单易懂的JQuery魔法</a></li>
</ul>
</li>
<li>Meteor<ul>
<li><a href="http://zh.discovermeteor.com">Discover Meteor</a></li>
</ul>
</li>
<li>Node.js<ul>
<li><a href="http://expressjs.jser.us">express.js 中文文档</a></li>
<li><a href="http://javascript.ruanyifeng.com/nodejs/express.html">Express框架</a></li>
<li><a href="https://github.com/guo-yu/koa-guide">koa 中文文档</a></li>
<li><a href="https://www.npmjs.com/package/learnyounode-zh-cn">Learn You The Node.js For Much Win! (中文版)</a></li>
<li><a href="http://i5ting.github.io/node-debug-tutorial/">Node debug 三法三例</a></li>
<li><a href="https://github.com/jollen/nodejs-fullstack-lessons">Node.js Fullstack《從零到一的進撃》</a></li>
<li><a href="https://github.com/alsotang/node-lessons">Node.js 包教不包会</a></li>
<li><a href="https://github.com/nodejs-tw/nodejs-wiki-book">Nodejs Wiki Book</a> (繁体中文)</li>
<li><a href="https://www.gitbook.com/book/0532/nodejs/details">nodejs中文文档</a></li>
<li><a href="http://www.nodebeginner.org/index-zh-cn.html">Node入门</a></li>
<li><a href="http://nqdeng.github.io/7-days-nodejs/">七天学会NodeJS</a></li>
<li><a href="https://github.com/nswbmw/N-blog">使用 Express + MongoDB 搭建多人博客</a></li>
</ul>
</li>
<li>React.js<ul>
<li><a href="https://github.com/theJian/build-a-hn-front-page">Learn React &amp; Webpack by building the Hacker News front page</a></li>
<li><a href="http://wiki.jikexueyuan.com/project/react-native/">React Native 中文文档(含最新Android内容)</a></li>
<li><a href="https://github.com/fakefish/react-webpack-cookbook">React webpack-cookbook</a></li>
<li><a href="http://fraserxu.me/intro-to-react/">React 入门教程</a></li>
<li><a href="http://reactjs.cn">React.js 中文文档</a></li>
</ul>
</li>
<li>underscore.js<ul>
<li><a href="http://learningcn.com/underscore/">Underscore.js中文文档</a></li>
</ul>
</li>
<li><a href="https://github.com/getify/You-Dont-Know-JS">You-Dont-Know-JS</a> (深入JavaScript语言核心机制的系列图书)</li>
<li>Zepto.js<ul>
<li><a href="http://mweb.baidu.com/zeptoapi/">Zepto.js 中文文档</a></li>
</ul>
</li>
<li><a href="http://justjavac.com/named-function-expressions-demystified.html">命名函数表达式探秘</a>  (注:原文由<a href="http://www.cn-cuckoo.com">为之漫笔</a> 翻译，原始地址无法打开，所以此处地址为我博客上的备份)</li>
<li><a href="http://www.oschina.net/translate/learning-javascript-design-patterns">学用 JavaScript 设计模式</a> (开源中国)</li>
<li><a href="http://www.cnblogs.com/TomXu/archive/2011/12/15/2288411.html">深入理解JavaScript系列</a></li>
</ul>
<h3 id="LaTeX"><a href="#LaTeX" class="headerlink" title="LaTeX"></a>LaTeX</h3><ul>
<li><a href="http://www.dralpha.com/zh/tech/tech.htm">LaTeX 笔记</a></li>
<li><a href="http://ctan.org/pkg/lshort-zh-cn">一份不太简短的 LaTeX2ε 介绍</a></li>
<li><a href="https://github.com/49951331/graduate-project-102pj/blob/master/docs/latex123.pdf">大家來學 LaTeX</a> (PDF)</li>
</ul>
<h3 id="LISP"><a href="#LISP" class="headerlink" title="LISP"></a>LISP</h3><ul>
<li><a href="http://acl.readthedocs.org/en/latest/">ANSI Common Lisp 中文翻译版</a></li>
<li><a href="http://www.ituring.com.cn/minibook/862">Common Lisp 高级编程技术</a> (《On Lisp》中文版)</li>
</ul>
<h3 id="Lua"><a href="#Lua" class="headerlink" title="Lua"></a>Lua</h3><ul>
<li><a href="http://www.w3cschool.cc/manual/lua53doc/contents.html">Lua 5.3 参考手册</a></li>
</ul>
<h3 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h3><ul>
<li><a href="http://wowubuntu.com/markdown/basic.html">Markdown 快速入门</a></li>
<li><a href="http://www.jianshu.com/p/7bd23251da0a">Markdown 简明教程</a></li>
<li><a href="http://wowubuntu.com/markdown/">Markdown 语法说明</a></li>
<li><a href="http://www.jianshu.com/p/q81RER">献给写作者的 Markdown 新手指南</a></li>
</ul>
<h3 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h3><ul>
<li><a href="http://www.nodebeginner.org/index-zh-cn.html">Node 入门</a></li>
<li><a href="https://www.gitbook.com/book/0532/nodejs/details">The NodeJS 中文文档</a>（社区翻译）</li>
<li><a href="http://nqdeng.github.io/7-days-nodejs/">七天学会NodeJS</a> 阿里出品，很好的入门资料</li>
</ul>
<h3 id="Perl"><a href="#Perl" class="headerlink" title="Perl"></a>Perl</h3><ul>
<li><a href="https://github.com/fayland/chinese-perl-book">Master Perl Today</a></li>
<li><a href="https://github.com/horus/modern_perl_book">《Modern Perl》中文版</a></li>
<li><a href="http://www.cbi.pku.edu.cn/chinese/documents/perl/index.htm">Perl 5 教程</a></li>
<li><a href="http://www.yiibai.com/perl">Perl 教程</a></li>
</ul>
<h3 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h3><ul>
<li><a href="http://wulijun.github.io/php-the-right-way/">PHP 之道</a></li>
<li><a href="http://php.net/manual/zh/">PHP5中文手册</a></li>
<li><a href="http://www.walu.cc/phpbook/preface.md">PHP扩展开发及内核应用</a></li>
<li><a href="https://wusuopu.gitbooks.io/symfony2_tutorial/content">Symfony2 实例教程</a></li>
<li><a href="http://www.php-internals.com/book/">深入理解 PHP 内核</a></li>
</ul>
<h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><ul>
<li><a href="http://djangobook.py3k.cn/2.0/">Django book 2.0</a></li>
<li><a href="http://docspy3zh.readthedocs.org/en/latest/">Python 3 文档(简体中文) 3.2.2 documentation</a></li>
<li><a href="http://www.pythondoc.com">Python 中文学习大本营</a></li>
<li><a href="https://github.com/jiechic/diveintopython3">深入 Python 3</a></li>
<li><a href="http://old.sebug.net/paper/books/LearnPythonTheHardWay/">笨办法学 Python</a></li>
</ul>
<h3 id="R"><a href="#R" class="headerlink" title="R"></a>R</h3><ul>
<li><a href="http://cran.r-project.org/doc/contrib/Liu-FAQ.pdf">153分钟学会 R</a> (PDF)</li>
<li><a href="http://www.biosino.org/R/R-doc/files/R4beg_cn_2.0.pdf">《R for beginners》中文版</a> (PDF)</li>
<li><a href="http://cran.r-project.org/doc/contrib/Ding-R-intro_cn.pdf">R 导论</a> (《An Introduction to R》中文版) (PDF)</li>
<li><a href="http://yanping.me/shiny-tutorial/">用 R 构建 Shiny 应用程序</a> (《Building ‘Shiny’ Applications with R》中文版)</li>
<li><a href="http://cran.r-project.org/doc/contrib/Xu-Statistics_and_R.pdf">统计学与 R 读书笔记</a> (PDF)</li>
</ul>
<h3 id="reStructuredText"><a href="#reStructuredText" class="headerlink" title="reStructuredText"></a>reStructuredText</h3><ul>
<li><a href="http://www.pythondoc.com/sphinx/rest.html">reStructuredText 入门</a></li>
<li><a href="http://jwch.sdut.edu.cn/book/rst.html">reStructuredText 简明教程</a></li>
</ul>
<h3 id="Ruby"><a href="#Ruby" class="headerlink" title="Ruby"></a>Ruby</h3><ul>
<li><a href="https://github.com/JuanitoFatas/rails-style-guide/blob/master/README-zhCN.md">Rails 风格指南</a></li>
<li><a href="http://railstutorial-china.org">Ruby on Rails Tutorial 原书第 2 版</a></li>
<li><a href="https://ihower.tw/rails4/">Ruby on Rails 实战圣经</a></li>
<li><a href="https://github.com/JuanitoFatas/ruby-style-guide/blob/master/README-zhCN.md">Ruby 风格指南</a></li>
<li><a href="http://lrthw.github.io">笨方法学 Ruby</a></li>
</ul>
<h3 id="Rust"><a href="#Rust" class="headerlink" title="Rust"></a>Rust</h3><ul>
<li><a href="https://github.com/KaiserY/rust-book-chinese">Rust 官方教程</a></li>
<li><a href="https://github.com/photino/rust-notes">Rust 语言学习笔记</a></li>
<li><a href="https://github.com/rustcc/RustPrimer">RustPrimer</a></li>
<li><a href="https://github.com/rustcc/rust-by-example/">通过例子学习 Rust</a></li>
</ul>
<h3 id="Scala"><a href="#Scala" class="headerlink" title="Scala"></a>Scala</h3><ul>
<li><a href="http://twitter.github.io/effectivescala/index-cn.html">Effective Scala</a></li>
<li><a href="https://www.gitbook.com/book/windor/beginners-guide-to-scala/details">Scala 初学者指南</a> (The Neophyte’s Guide to Scala)</li>
<li><a href="http://twitter.github.io/scala_school/zh_cn/index.html">Scala 课堂</a> (Twitter的Scala中文教程)</li>
</ul>
<h3 id="Scheme"><a href="#Scheme" class="headerlink" title="Scheme"></a>Scheme</h3><ul>
<li><a href="http://deathking.github.io/yast-cn/">Scheme 入门教程</a> (《Yet Another Scheme Tutorial》中文版)</li>
</ul>
<h3 id="Shell"><a href="#Shell" class="headerlink" title="Shell"></a>Shell</h3><ul>
<li><a href="http://wiki.ubuntu.org.cn/Shell%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80">Shell 编程基础</a></li>
<li><a href="https://github.com/qinjx/30min_guides/blob/master/shell.md">Shell 脚本编程30分钟入门</a></li>
<li><a href="http://billie66.github.io/TLCL/book/zh">The Linux Command Line 中文版</a></li>
</ul>
<h3 id="Swift"><a href="#Swift" class="headerlink" title="Swift"></a>Swift</h3><ul>
<li><a href="https://www.gitbook.com/book/numbbbbb/-the-swift-programming-language-/details">《The Swift Programming Language》中文版</a></li>
</ul>
<h3 id="Vim"><a href="#Vim" class="headerlink" title="Vim"></a>Vim</h3><ul>
<li><a href="http://man.chinaunix.net/newsoft/vi/doc/help.html">Vim Manual(中文版)</a></li>
<li><a href="http://www.study-area.org/tips/vim/index.html">大家來學 VIM</a></li>
</ul>
<h3 id="Visual-Prolog"><a href="#Visual-Prolog" class="headerlink" title="Visual Prolog"></a>Visual Prolog</h3><ul>
<li><a href="http://wiki.visual-prolog.com/index.php?title=A_Beginners_Guide_to_Visual_Prolog_in_Chinese">Visual Prolog 7初学指南</a></li>
<li><a href="http://wiki.visual-prolog.com/index.php?title=Visual_Prolog_for_Tyros_in_Chinese">Visual Prolog 7边练边学</a></li>
</ul>
<blockquote>
<p>如果文章对你有帮助,请去我的博客留个言吧! <a href="http://geeksblog.cc">我的博客</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 免费的开源书籍：&lt;/strong&gt; &lt;Excerpt in index | 首页摘要&gt;&lt;br&gt;国外程序员在 stackoverflow 推荐的程序员必读书籍，中文版。&lt;br&gt;
    
    </summary>
    
      <category term="资源分享" scheme="http://geeksblog.cc/categories/%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/"/>
    
    
      <category term="book" scheme="http://geeksblog.cc/tags/book/"/>
    
  </entry>
  
  <entry>
    <title>Hexo配置和优化记录</title>
    <link href="http://geeksblog.cc/hexo-config.html"/>
    <id>http://geeksblog.cc/hexo-config.html</id>
    <published>2016-11-28T15:07:12.000Z</published>
    <updated>2016-11-30T23:47:25.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> hexo配置和优化高级篇：</strong> <Excerpt in index | 首页摘要><br>本文章不讲解hexo的基础配置，只针对hexo的高级配置，性能优化，seo配置进行讲解。<br><a id="more"></a></p>
<The rest of contents | 余下全文>

<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>仔细想想，使用hexo搭建博客也有半年多了，但是发现访问量一直几乎没有，特别是经历几次迁移之后，之前从github到coding，<br>现在迁移到了云服务器，研究了一下如何进行seo和网站性能优化，便有了这篇文章。</p>
<h3 id="实用的功能"><a href="#实用的功能" class="headerlink" title="实用的功能"></a>实用的功能</h3><ol>
<li>站内搜索（百度的）</li>
<li>本地搜索（本地插件）</li>
<li>网站统计</li>
<li>留言功能</li>
<li>rss订阅功能</li>
</ol>
<h3 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h3><ol>
<li>html压缩</li>
<li>css压缩</li>
<li>js压缩</li>
<li>img压缩</li>
<li>nginx代理，开启gzip压缩</li>
<li>cdn代理css和图片</li>
<li>删除主题无用的js和css</li>
</ol>
<h3 id="seo优化"><a href="#seo优化" class="headerlink" title="seo优化"></a>seo优化</h3><ol>
<li>sitemap</li>
<li>a标签添加<code>rel=&quot;external nofollow&quot;</code></li>
<li>使用meta标签</li>
<li>使用robots文件</li>
<li>主动提交sitemap到搜索引擎</li>
<li>添加外链和内链</li>
</ol>
<blockquote>
<p>如果文章对你有帮助,请去我的博客留个言吧! <a href="http://geeksblog.cc">我的博客</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; hexo配置和优化高级篇：&lt;/strong&gt; &lt;Excerpt in index | 首页摘要&gt;&lt;br&gt;本文章不讲解hexo的基础配置，只针对hexo的高级配置，性能优化，seo配置进行讲解。&lt;br&gt;
    
    </summary>
    
      <category term="开发工具" scheme="http://geeksblog.cc/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="hexo" scheme="http://geeksblog.cc/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu服务器私人定制</title>
    <link href="http://geeksblog.cc/server-config.html"/>
    <id>http://geeksblog.cc/server-config.html</id>
    <published>2016-11-28T12:36:03.000Z</published>
    <updated>2016-11-28T13:06:26.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> ubuntu服务器私人定制：</strong> <Excerpt in index | 首页摘要><br>把ubuntu服务器打造成自己的个性服务器，装逼必备！！！<br><a id="more"></a></p>
<The rest of contents | 余下全文>

<p>###　说明<br><strong>此教程针对Ubuntu14,其他版本仅作参考</strong></p>
<p>###　用户密码管理<br><code>sudo passwd root</code></p>
<ol>
<li>添加一个用户组并指定id为1002<br><code>sudo groupadd －g 1002 www</code></li>
<li><p>添加一个用户到www组并指定id为1003<br><code>sudo useradd wyx -g 1002 -u 1003 -m</code></p>
</li>
<li><p>修改用户的密码<br><code>sudo passwd wyx</code></p>
</li>
<li><p>删除一个用户<br><code>sudo userdel wyx</code></p>
</li>
<li><p>为该用户添加sudo权限</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo usermod <span class="_">-a</span> -G adm wyx</div><div class="line">sudo usermod <span class="_">-a</span> -G sudo wyx</div></pre></td></tr></table></figure>
<ol>
<li>查看所有用户和用户组：<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cat /etc/passwd</div><div class="line">cat /etc/group</div></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h3><ol>
<li>安装nvm<code>curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh | bash</code></li>
<li>安装node<code>nvm install v4.4.4</code>,安装<code>nvm install v6.9.1</code></li>
<li>设置默认的node版本<code>nvm alias default v4.4.4</code></li>
<li>安装npm3  <code>npm install -g npm@3</code></li>
<li>设置淘宝的cnpm源  <code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></li>
<li>验证安装<code>node -v,npm -v,cnpm -v</code><h3 id="安装node常用包"><a href="#安装node常用包" class="headerlink" title="安装node常用包"></a>安装node常用包</h3></li>
<li>安装pm2<code>cnpm install -g pm2</code></li>
<li>安装hexo博客<code>cnpm install -g hexo-cli</code></li>
<li>安装同步插件rsync<code>cnpm install -g rsync</code></li>
</ol>
<h3 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h3><ol>
<li>apt安装</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo apt-get update</div><div class="line">sudo apt-get install -y docker.io</div><div class="line">sudo ln -sf /usr/bin/docker.io /usr/<span class="built_in">local</span>/bin/docker</div><div class="line">sudo sed -i <span class="string">'$acomplete -F _docker docker'</span> /etc/bash_completion.d/docker.io</div></pre></td></tr></table></figure>
<ol>
<li>源码安装最新版本</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install apt-transport-https</div><div class="line">sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9</div><div class="line">sudo bash -c <span class="string">"echo deb https://get.docker.io/ubuntu docker main &gt; /etc/apt/sources.list.d/docker.list"</span></div><div class="line">sudo apt-get update</div><div class="line">sudo apt-get install lxc-docker</div></pre></td></tr></table></figure>
<ol>
<li>验证安装版本<br><code>docker -v</code></li>
</ol>
<h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><p><code>sudo apt-get install nginx</code><br>启动和配置nginx</p>
<h3 id="安装redis"><a href="#安装redis" class="headerlink" title="安装redis"></a>安装redis</h3><p><code>sudo apt-get install redis-server</code><br>启动和配置文件:</p>
<h3 id="安装mongodb"><a href="#安装mongodb" class="headerlink" title="安装mongodb"></a>安装mongodb</h3><ol>
<li>安装3.0</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10</div><div class="line"><span class="built_in">echo</span> <span class="string">"deb http://repo.mongodb.org/apt/debian wheezy/mongodb-org/3.0 main"</span> | sudo tee /etc/apt/sources.list.d/mongodb-org-3.0.list</div><div class="line">apt-get update  </div><div class="line">apt-get install mongodb-org</div></pre></td></tr></table></figure>
<ol>
<li>安装3.2最新版</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927</div><div class="line"><span class="built_in">echo</span> <span class="string">"deb http://repo.mongodb.org/apt/ubuntu "</span>$(lsb_release -sc)<span class="string">"/mongodb-org/3.2 multiverse"</span> | sudo tee /etc/apt/sources.list.d/mongodb.list</div><div class="line">sudo apt-get update</div><div class="line">sudo apt-get install mongodb-org</div></pre></td></tr></table></figure>
<ol>
<li><p>制定版本<br><code>apt-get install mongodb-org=3.2.0 mongodb-org-server=3.2.0 mongodb-org-shell=3.2.0 mongodb-org-mongos=3.2.0 mongodb-org-tools=3.2.0</code></p>
</li>
<li><p>启动服务</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo service mongod start</div><div class="line">sudo service mongod stop</div></pre></td></tr></table></figure>
<ol>
<li>验证安装<br><code>mongod --version</code></li>
</ol>
<p>配置</p>
<h3 id="安装jdk"><a href="#安装jdk" class="headerlink" title="安装jdk"></a>安装jdk</h3><p>安装jdk1.7<code>sudo apt-get install openjdk-7-jdk</code><br>源码安装</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /usr/lib/jvm</div><div class="line">sudo tar zxvf jdk-7u21-linux-i586.tar.gz -C /usr/lib/jvm</div><div class="line"><span class="built_in">cd</span> /usr/lib/jvm</div><div class="line">sudo mv jdk1.7.0_21 java</div><div class="line"></div><div class="line">sudo vim ~/.bashrc</div><div class="line"></div><div class="line"><span class="built_in">export</span> JAVA_HOME=/usr/lib/jvm/java</div><div class="line"><span class="built_in">export</span> JRE_HOME=<span class="variable">$&#123;JAVA_HOME&#125;</span>/jre  </div><div class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$&#123;JAVA_HOME&#125;</span>/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib  </div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="variable">$PATH</span></div></pre></td></tr></table></figure>
<h3 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h3><p>实用ubuntu自带的工具下载<br><code>sudo apt-get install mysql-server</code></p>
<h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><p>常见的方法有两种。</p>
<ol>
<li><p>在用户主目录下有一个 .bashrc 文件，可以在此文件中加入 PATH 的设置如下：<br><code>export PATH=”$PATH:/your path1/:/your path2/…..”</code></p>
</li>
<li><p>在 /etc/profile中增加</p>
<pre><code class="bash">PATH=<span class="string">"<span class="variable">$PATH</span>:/home/zhengb66/bin"</span> 
<span class="built_in">export</span> PATH
</code></pre>
</li>
</ol>
<h3 id="开机自启动"><a href="#开机自启动" class="headerlink" title="开机自启动"></a>开机自启动</h3><ol>
<li><p>方法一，编辑rc.loacl脚本<br>Ubuntu开机之后会执行/etc/rc.local文件中的脚本，<br>所以我们可以直接在/etc/rc.local中添加启动脚本。<br>当然要添加到语句：exit 0 前面才行。代码如下:<br><code>sudo vi /etc/rc.local</code><br>然后在 exit 0 前面添加好脚本代码。</p>
</li>
<li><p>方法二，添加一个Ubuntu的开机启动服务。<br>如果要添加为开机启动执行的脚本文件，<br>可先将脚本复制或者软连接到/etc/init.d/目录下，<br>然后用：update-rc.d xxx defaults NN命令(NN为启动顺序)，<br>将脚本添加到初始化执行的队列中去。<br>注意如果脚本需要用到网络，则NN需设置一个比较大的数字，如99。<br>1) 将你的启动脚本复制到 /etc/init.d目录下<br>以下假设你的脚本文件名为 test。<br>2) 设置脚本文件的权限</p>
</li>
</ol>
<p>代码如下:<br><code>sudo chmod 755 /etc/init.d/test</code><br>3) 执行如下命令将脚本放到启动脚本中去：<br>代码如下:<br><code>cd /etc/init.d</code>  <code>sudo update-rc.d test defaults 95</code><br> 注：其中数字95是脚本启动的顺序号，按照自己的需要相应修改即可。在你有多个启动脚本，而它们之间又有先后启动的依赖关系时你就知道这个数字的具体作用了。该命令的输出信息参考如下：<br>卸载启动脚本的方法：<br>代码如下:<br><code>cd /etc/init.d</code><br><code>sudo update-rc.d -f test remove</code></p>
<h3 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h3><p>在Ubuntu下，cron是被默认安装并启动的。通过查看/etc/crontab<br>推荐使用crontab -e命令添加自定义的任务（编辑的是/var/spool/cron下对应用户的cron文件，在/var/spool/cron下的crontab文件 不可以直接创建或者直接修改，crontab文件是通过crontab命令得到的）。<br><code>crontab -e</code></p>
<ol>
<li><p>直接执行命令行<br>每2分钟打印一个字符串“Hello World”，保存至文件/home/laigw/cron/HelloWorld.txt中，cron 格式如下：<br><code>*/2 * * * * echo “Hello World.” &gt;&gt; /home/HelloWorld.txt</code></p>
</li>
<li><p>shell 文件<br>每3分钟调用一次 /home/laigw/cron/test.sh 文件，cron 格式如下：<br><code>*/3 * * * * /home/laigw/cron/test.sh</code></p>
<h3 id="ftp和rsync配置"><a href="#ftp和rsync配置" class="headerlink" title="ftp和rsync配置"></a>ftp和rsync配置</h3></li>
</ol>
<h3 id="持续集成环境"><a href="#持续集成环境" class="headerlink" title="持续集成环境"></a>持续集成环境</h3><ol>
<li>jenkens配置</li>
<li>gitlab配置</li>
<li>git服务器</li>
</ol>
<blockquote>
<p>如果文章对你有帮助,请去我的博客留个言吧! <a href="http://geeksblog.cc">我的博客</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; ubuntu服务器私人定制：&lt;/strong&gt; &lt;Excerpt in index | 首页摘要&gt;&lt;br&gt;把ubuntu服务器打造成自己的个性服务器，装逼必备！！！&lt;br&gt;
    
    </summary>
    
      <category term="开发工具" scheme="http://geeksblog.cc/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="linux" scheme="http://geeksblog.cc/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Mac开发环境配置</title>
    <link href="http://geeksblog.cc/mac-dev.html"/>
    <id>http://geeksblog.cc/mac-dev.html</id>
    <published>2016-11-27T07:52:38.000Z</published>
    <updated>2016-11-27T08:32:05.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> mac开发环境配置：</strong> <Excerpt in index | 首页摘要><br>工欲善其事，必先利其器，做好开发者，先搞好开发环境啊。针对mac开发者的开发配置，把mac打造成最具生产力工具！<br><a id="more"></a></p>
<The rest of contents | 余下全文>

<h3 id="软件下载说明"><a href="#软件下载说明" class="headerlink" title="软件下载说明"></a>软件下载说明</h3><p>下面所提到的软件，有很多需要付费或者破解版，为了方便大家使用，会在网盘分享给大家，只需在评论的地方留下自己的<strong>百度云账号</strong>！！！</p>
<h3 id="软件分类说明"><a href="#软件分类说明" class="headerlink" title="软件分类说明"></a>软件分类说明</h3><ol>
<li>通用（开发者必备的软件）</li>
<li>java类（java开发者必不可少）</li>
<li>前端类（偏前端和nodejs）</li>
<li>python类</li>
<li>数据库类</li>
<li>其他（php，ruby等等）</li>
</ol>
<h3 id="通用软件"><a href="#通用软件" class="headerlink" title="通用软件"></a>通用软件</h3><ol>
<li>Alfred</li>
<li>dash</li>
<li>homebrew</li>
<li>zsh（oh my zsh）</li>
<li>sublime text3,</li>
<li>vscode</li>
<li>paste(剪切板工具)</li>
<li>BetterSnapTool(分屏软件)</li>
<li>cornerstone(svn)</li>
<li>tower(git)</li>
<li>alternote()</li>
<li>paw</li>
<li>chrome</li>
<li>firefox</li>
<li>pdf expert</li>
<li>CheatSheet</li>
<li>snippetslab</li>
</ol>
<h3 id="java软件"><a href="#java软件" class="headerlink" title="java软件"></a>java软件</h3><ol>
<li>jdk</li>
<li>idea</li>
<li>eclipse</li>
<li>maven</li>
<li>zookeeper,dubbo</li>
<li>tomcat</li>
<li>apache</li>
</ol>
<h3 id="前端必备"><a href="#前端必备" class="headerlink" title="前端必备"></a>前端必备</h3><ol>
<li>nvm(nodejs,npm,cnpm)</li>
<li>webpack</li>
<li>yo</li>
<li>webstorm</li>
</ol>
<h3 id="python必备"><a href="#python必备" class="headerlink" title="python必备"></a>python必备</h3><ol>
<li>pycharm</li>
<li>sublime text（插件）</li>
</ol>
<h3 id="数据库类"><a href="#数据库类" class="headerlink" title="数据库类"></a>数据库类</h3><ol>
<li>mysql</li>
<li>mongodb</li>
<li>sqllite</li>
<li>navicate</li>
<li>robomongo</li>
<li>redis</li>
</ol>
<h3 id="其他软件"><a href="#其他软件" class="headerlink" title="其他软件"></a>其他软件</h3><ol>
<li>office</li>
<li>keynote,pages,number</li>
<li>photoshop</li>
</ol>
<p>文章长期更新，请收藏</p>
<blockquote>
<p>如果文章对你有帮助,请去我的博客留个言吧! <a href="http://geeksblog.cc">我的博客</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; mac开发环境配置：&lt;/strong&gt; &lt;Excerpt in index | 首页摘要&gt;&lt;br&gt;工欲善其事，必先利其器，做好开发者，先搞好开发环境啊。针对mac开发者的开发配置，把mac打造成最具生产力工具！&lt;br&gt;
    
    </summary>
    
      <category term="开发工具" scheme="http://geeksblog.cc/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="mac" scheme="http://geeksblog.cc/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>Npm使用详解</title>
    <link href="http://geeksblog.cc/npm-detail.html"/>
    <id>http://geeksblog.cc/npm-detail.html</id>
    <published>2016-11-17T12:05:56.000Z</published>
    <updated>2016-11-27T07:18:51.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Npm使用详解：</strong> <Excerpt in index | 首页摘要><br>    npm所有的常用知识都在这里，没错，所有的！！<br><a id="more"></a></p>
<The rest of contents | 余下全文>

<h2 id="node版本控制"><a href="#node版本控制" class="headerlink" title="node版本控制"></a>node版本控制</h2><ol>
<li><p>使用nvm进行版本控制</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- unix --&gt;</span></div><div class="line">curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh | bash</div><div class="line"><span class="comment">&lt;!-- windows --&gt;</span></div><div class="line">https://github.com/coreybutler/nvm-windows需要自己下载</div><div class="line"><span class="comment">&lt;!-- 安装node --&gt;</span></div><div class="line">nvm install v4.4</div><div class="line"><span class="comment">&lt;!-- 选择默认版本 --&gt;</span></div><div class="line">nvm alias default v4.4</div></pre></td></tr></table></figure>
</li>
<li><p>镜像管理,使用cnpm进行加速</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 使用cnpm命令 --&gt;</span></div><div class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</div><div class="line"><span class="comment">&lt;!-- 使用npm别名 --&gt;</span></div><div class="line">alias cnpm="npm --registry=https://registry.npm.taobao.org \</div><div class="line">--cache=$HOME/.npm/.cache/cnpm \</div><div class="line">--disturl=https://npm.taobao.org/dist \</div><div class="line">--userconfig=$HOME/.cnpmrc"</div></pre></td></tr></table></figure>
</li>
<li><p>修改nvm镜像地址进行下载加速</p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">export <span class="attr">NVM_NODEJS_ORG_MIRROR=</span>https://nodejs.org/dist</div><div class="line">nvm install <span class="keyword">node</span></div><div class="line"></div><div class="line"><span class="title">NVM_NODEJS_ORG_MIRROR</span>=https://nodejs.org/dist nvm install <span class="number">4.2</span></div></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><ol>
<li><p>安装命令,</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">npm <span class="keyword">install</span>;</div><div class="line">npm <span class="keyword">install</span> <span class="comment">--save-dev;</span></div><div class="line">npm <span class="keyword">install</span> -g;</div><div class="line">npm <span class="keyword">uninstall</span> <span class="keyword">name</span>;</div></pre></td></tr></table></figure>
</li>
<li><p>npm命令<br>npm可以运行package.json的script命令</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 集成命令 --&gt;</span></div><div class="line">npm start</div><div class="line">npm restart</div><div class="line">npm test</div><div class="line">npm stop</div><div class="line">npm init（初始化项目时使用）</div><div class="line">npm publish(发布模块需要使用)</div><div class="line">npm update</div><div class="line">npm search</div><div class="line">npm list</div><div class="line">npm view moduleName(查看模块依赖)</div><div class="line"><span class="comment">&lt;!-- script命令 ,在script中定义好--&gt;</span></div><div class="line">npm run build</div><div class="line">npm run dev</div></pre></td></tr></table></figure>
</li>
</ol>
<blockquote>
<p>如果文章对你有帮助,请去我的博客留个言吧! <a href="http://geeksblog.cc">我的博客</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Npm使用详解：&lt;/strong&gt; &lt;Excerpt in index | 首页摘要&gt;&lt;br&gt;    npm所有的常用知识都在这里，没错，所有的！！&lt;br&gt;
    
    </summary>
    
      <category term="编程语言" scheme="http://geeksblog.cc/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="node" scheme="http://geeksblog.cc/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>深入浅出Nodejs笔记</title>
    <link href="http://geeksblog.cc/node-notes.html"/>
    <id>http://geeksblog.cc/node-notes.html</id>
    <published>2016-11-11T11:52:23.000Z</published>
    <updated>2016-11-27T07:19:19.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 深入浅出Nodejs笔记：</strong> <Excerpt in index | 首页摘要><br>    node学习重点，深入浅出nodejs学习笔记<br><a id="more"></a></p>
<p><The rest of contents | 余下全文></p>
<h3 id="node简介："><a href="#node简介：" class="headerlink" title="node简介："></a>node简介：</h3><pre><code>1. 异步IO，适合io密集型的
2. 单线程，通过childnode实现多线程
3. 跨平台，通过electron编写跨平台客户端
4. 上手简单,功能强大
</code></pre><h3 id="node模块"><a href="#node模块" class="headerlink" title="node模块"></a>node模块</h3><pre><code>1. node模块分为两类，一是node的内建模块（核心模块），二是用户编写的文件模块
2. 核心模块在node编译时加载到内存，文件模块在运行时动态加载
3. node的每一个文件模块都是一个对象
4. 文件模块需要经过路径分析，文件定位，编译执行3个过程
5. node对引入过的模块都进行缓存，require会优先使用缓存
</code></pre><h3 id="异步IO"><a href="#异步IO" class="headerlink" title="异步IO"></a>异步IO</h3><pre><code>1. node中都是异步的，实现同步的话要通过回调函数或者同步框架
2. 异步的方案：事件发布/事件监听，Promise/Deferred模式,流程控制库
3. 事件监听模式：Node自身的events模块提供了简单的实现，具有addListener/on(). once(). remove        Listener(). removeAllListeners()和emit()方法。
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">emitter.on(<span class="string">"event1"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">message</span>) </span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(message);</div><div class="line">&#125;);</div><div class="line"><span class="comment">// 发布</span></div><div class="line">emitter.emit(<span class="string">'event1'</span>, <span class="string">"I am message!"</span>);</div></pre></td></tr></table></figure>
</code></pre><h3 id="内存控制"><a href="#内存控制" class="headerlink" title="内存控制"></a>内存控制</h3><pre><code>1. 在node中内存限制为64位1.4G（32位0.7G）
2. 限制内存的原因：V8做垃圾回收如果以1.5G为例，做一次小的垃圾回收需要50ms,做一次非增量式内存回收耗时1s以上
3. node在启动时可以更改内存大小，--max-old-space-size=或者--max-new-space-size=
4. v8的内存回收机制：内存分代为新生代（生命周期短）和老生代（生命周期长），
5. 堆外内存不受内存限制，如buffer对象的使用
</code></pre><h3 id="理解buffer"><a href="#理解buffer" class="headerlink" title="理解buffer"></a>理解buffer</h3><h3 id="网络编程"><a href="#网络编程" class="headerlink" title="网络编程"></a>网络编程</h3><pre><code>1. tcp服务
    服务端：
</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> net = <span class="built_in">require</span>(<span class="string">'net'</span>);</div><div class="line"><span class="keyword">var</span> server = net.createServer(<span class="function"><span class="keyword">function</span> (<span class="params">socket</span>) </span>&#123;</div><div class="line">socket.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</div><div class="line">	socket.write(<span class="string">"你好"</span>);</div><div class="line">&#125;);</div><div class="line">socket.on(<span class="string">'end'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">'断开连接'</span>);</div><div class="line">&#125;);</div><div class="line">socket.write(<span class="string">"欢迎光临：\n"</span>);</div><div class="line">&#125;);</div><div class="line">server.listen(<span class="number">8124</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">'server bound'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<pre><code>客户端：
</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> net = <span class="built_in">require</span>(<span class="string">'net'</span>);</div><div class="line"><span class="keyword">var</span> client = net.connect(&#123;port: <span class="number">8124</span>&#125;, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; <span class="comment">//'connect' listener</span></div><div class="line">	<span class="built_in">console</span>.log(<span class="string">'client connected'</span>);</div><div class="line">	client.write(<span class="string">'world!\r\n'</span>);</div><div class="line">&#125;);</div><div class="line">client.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(data.toString());</div><div class="line">	client.end();</div><div class="line">&#125;);</div><div class="line">client.on(<span class="string">'end'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">'client disconnected'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<pre><code>2. udp服务
</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 服务端：</span></div><div class="line"><span class="keyword">var</span> dgram = <span class="built_in">require</span>(<span class="string">"dgram"</span>);</div><div class="line"><span class="keyword">var</span> server = dgram.createSocket(<span class="string">"udp4"</span>);</div><div class="line">server.on(<span class="string">"message"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">msg, rinfo</span>) </span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">"server got: "</span> + msg + <span class="string">" from "</span> +</div><div class="line">	rinfo.address + <span class="string">":"</span> + rinfo.port);</div><div class="line">&#125;);</div><div class="line">server.on(<span class="string">"listening"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line"><span class="keyword">var</span> address = server.address();</div><div class="line"><span class="built_in">console</span>.log(<span class="string">"server listening "</span> +</div><div class="line">	address.address + <span class="string">":"</span> + address.port);</div><div class="line">&#125;);</div><div class="line">server.bind(<span class="number">41234</span>);</div><div class="line"><span class="comment">// 客户端：</span></div><div class="line"><span class="keyword">var</span> dgram = <span class="built_in">require</span>(<span class="string">'dgram'</span>);</div><div class="line"><span class="keyword">var</span> message = <span class="keyword">new</span> Buffer(”nodejs“);</div><div class="line"><span class="keyword">var</span> client = dgram.createSocket(<span class="string">"udp4"</span>);</div><div class="line">client.send(message, <span class="number">0</span>, message.length, <span class="number">41234</span>, <span class="string">"localhost"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err, bytes</span>) </span>&#123;</div><div class="line">	client.close();</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<pre><code>3. http服务
</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 服务端：</span></div><div class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</div><div class="line">http.createServer(<span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</div><div class="line">res.writeHead(<span class="number">200</span>, &#123;<span class="string">'Content-Type'</span>: <span class="string">'text/plain'</span>&#125;);</div><div class="line">	res.end(<span class="string">'Hello World\n'</span>);</div><div class="line">&#125;).listen(<span class="number">1337</span>, <span class="string">'127.0.0.1'</span>);</div><div class="line"><span class="built_in">console</span>.log(<span class="string">'Server running at http://127.0.0.1:1337/'</span>);</div><div class="line"><span class="comment">// 客户端：</span></div><div class="line"><span class="keyword">var</span> options = &#123;</div><div class="line">	hostname: <span class="string">'127.0.0.1'</span>,</div><div class="line">	port: <span class="number">1334</span>,</div><div class="line">	path: <span class="string">'/'</span>,</div><div class="line">	method: <span class="string">'GET'</span></div><div class="line">&#125;;</div><div class="line"><span class="keyword">var</span> req = http.request(options, <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">'STATUS: '</span> + res.statusCode);</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">'HEADERS: '</span> + <span class="built_in">JSON</span>.stringify(res.headers));</div><div class="line">	res.setEncoding(<span class="string">'utf8'</span>);</div><div class="line">	res.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">chunk</span>) </span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(chunk);</div><div class="line">	&#125;);</div><div class="line">&#125;);</div><div class="line">req.end();</div></pre></td></tr></table></figure>
<pre><code>4. websocket服务
</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 客户端：</span></div><div class="line"><span class="keyword">var</span> socket = <span class="keyword">new</span> WebSocket(<span class="string">'ws://127.0.0.1:12010/updates'</span>);</div><div class="line">socket.onopen = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="keyword">if</span> (socket.bufferedAmount == <span class="number">0</span>)</div><div class="line">		socket.send(getUpdateData());</div><div class="line">	&#125;, <span class="number">50</span>);</div><div class="line">&#125;;</div><div class="line">socket.onmessage = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</div><div class="line">	<span class="comment">// TODO：event.data</span></div><div class="line">&#125;;</div><div class="line"><span class="comment">// &lt;!-- 模拟浏览器： --&gt;</span></div><div class="line"></div><div class="line"><span class="keyword">var</span> WebSocket = <span class="function"><span class="keyword">function</span> (<span class="params">url</span>) </span>&#123;</div><div class="line"><span class="comment">// 代码?解析ws://127.0.0.1:12010/updates</span></div><div class="line">	<span class="keyword">this</span>.options = parseUrl(url);</div><div class="line">	<span class="keyword">this</span>.connect();</div><div class="line">&#125;;</div><div class="line">WebSocket.prototype.onopen = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line"><span class="comment">// TODO</span></div><div class="line">&#125;;</div><div class="line">WebSocket.prototype.setSocket = <span class="function"><span class="keyword">function</span> (<span class="params">socket</span>) </span>&#123;</div><div class="line"><span class="keyword">this</span>.socket = socket;</div><div class="line">&#125;;</div><div class="line">WebSocket.prototype.connect = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="keyword">var</span> <span class="keyword">this</span> = that;</div><div class="line">	<span class="keyword">var</span> key = <span class="keyword">new</span> Buffer(<span class="keyword">this</span>.options.protocolVersion + <span class="string">'-'</span> + <span class="built_in">Date</span>.now()).toString(<span class="string">'base64'</span>);</div><div class="line">	<span class="keyword">var</span> shasum = crypto.createHash(<span class="string">'sha1'</span>);</div><div class="line">	<span class="keyword">var</span> expected = shasum.update(key + <span class="string">'258EAFA5-E914-47DA-95CA-C5AB0DC85B11'</span>).digest(<span class="string">'base64'</span>);</div><div class="line">	<span class="keyword">var</span> options = &#123;</div><div class="line">		port: <span class="keyword">this</span>.options.port, <span class="comment">//12010</span></div><div class="line">		host: <span class="keyword">this</span>.options.hostname, <span class="comment">// 127.0.0.1</span></div><div class="line">	headers: &#123;</div><div class="line">		<span class="string">'Connection'</span>: <span class="string">'Upgrade'</span>,</div><div class="line">		<span class="string">'Upgrade'</span>: <span class="string">'websocket'</span>,</div><div class="line">		<span class="string">'Sec-WebSocket-Version'</span>: <span class="keyword">this</span>.options.protocolVersion,</div><div class="line">		<span class="string">'Sec-WebSocket-Key'</span>: key</div><div class="line">	&#125;</div><div class="line">&#125;;</div><div class="line"><span class="keyword">var</span> req = http.request(options);</div><div class="line">	req.end();</div><div class="line">	req.on(<span class="string">'upgrade'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">res, socket, upgradeHead</span>) </span>&#123;</div><div class="line">	<span class="comment">// 连接成功</span></div><div class="line">	that.setSocket(socket);</div><div class="line">	<span class="comment">// 触发open事件</span></div><div class="line">	that.onopen();</div><div class="line">&#125;);</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 服务端响应：</span></div><div class="line"><span class="keyword">var</span> server = http.createServer(<span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</div><div class="line">	res.writeHead(<span class="number">200</span>, &#123;<span class="string">'Content-Type'</span>: <span class="string">'text/plain'</span>&#125;);</div><div class="line">	res.end(<span class="string">'Hello World\n'</span>);</div><div class="line">&#125;);</div><div class="line">server.listen(<span class="number">12010</span>);</div><div class="line"><span class="comment">// 在收到upgrade请求之后，告知客户端允许切换协议</span></div><div class="line">server.on(<span class="string">'upgrade'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, socket, upgradeHead</span>) </span>&#123;</div><div class="line">	<span class="keyword">var</span> head = <span class="keyword">new</span> Buffer(upgradeHead.length);</div><div class="line">	upgradeHead.copy(head);</div><div class="line">	<span class="keyword">var</span> key = req.headers[<span class="string">'sec-websocket-key'</span>];</div><div class="line">	<span class="keyword">var</span> shasum = crypto.createHash(<span class="string">'sha1'</span>);</div><div class="line">	key = shasum.update(key + <span class="string">"258EAFA5-E914-47DA-95CA-C5AB0DC85B11"</span>).digest(<span class="string">'base64'</span>);</div><div class="line">	<span class="keyword">var</span> headers = [</div><div class="line">		<span class="string">'HTTP/1.1 101 Switching Protocols'</span>,</div><div class="line">		<span class="string">'Upgrade: websocket'</span>,</div><div class="line">		<span class="string">'Connection: Upgrade'</span>,</div><div class="line">		<span class="string">'Sec-WebSocket-Accept: '</span> + key,</div><div class="line">		<span class="string">'Sec-WebSocket-Protocol: '</span> + protocol</div><div class="line">	];</div><div class="line">	<span class="comment">// 让数据立即发送</span></div><div class="line">	socket.setNoDelay(<span class="literal">true</span>);</div><div class="line">	socket.write(headers.concat(<span class="string">''</span>, <span class="string">''</span>).join(<span class="string">'\r\n'</span>));</div><div class="line">	<span class="comment">// 建立服务器端WebSocket连接</span></div><div class="line">	<span class="keyword">var</span> websocket = <span class="keyword">new</span> WebSocket();</div><div class="line">	websocket.setSocket(socket);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<pre><code>5. TLS服务（安全方面）
</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 服务端：</span></div><div class="line"><span class="keyword">var</span> tls = <span class="built_in">require</span>(<span class="string">'tls'</span>);</div><div class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</div><div class="line"><span class="keyword">var</span> options = &#123;</div><div class="line">	key: fs.readFileSync(<span class="string">'./keys/server.key'</span>),</div><div class="line">	cert: fs.readFileSync(<span class="string">'./keys/server.crt'</span>),</div><div class="line">	requestCert: <span class="literal">true</span>,</div><div class="line">	ca: [ fs.readFileSync(<span class="string">'./keys/ca.crt'</span>) ]</div><div class="line">&#125;;</div><div class="line"><span class="keyword">var</span> server = tls.createServer(options, <span class="function"><span class="keyword">function</span> (<span class="params">stream</span>) </span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">'server connected'</span>, stream.authorized ? <span class="string">'authorized'</span> : <span class="string">'unauthorized'</span>);</div><div class="line">	stream.write(<span class="string">"welcome!\n"</span>);</div><div class="line">	stream.setEncoding(<span class="string">'utf8'</span>);</div><div class="line">	stream.pipe(stream);</div><div class="line">&#125;);</div><div class="line">server.listen(<span class="number">8000</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">'server bound'</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<pre><code>// 测试证书是否正常
`$ openssl s_client -connect 127.0.0.1:8000`

客户端：
// 创建私钥
`$ openssl genrsa -out client.key 1024`
// 生成CSR
`$ openssl req -new -key client.key -out client.csr`
// 生成签名证书
`$ openssl x509 -req -CA ca.crt -CAkey ca.key -CAcreateserial -in client.csr -out client.crt`
</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> tls = <span class="built_in">require</span>(<span class="string">'tls'</span>);</div><div class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</div><div class="line"><span class="keyword">var</span> options = &#123;</div><div class="line">	key: fs.readFileSync(<span class="string">'./keys/client.key'</span>),</div><div class="line">	cert: fs.readFileSync(<span class="string">'./keys/client.crt'</span>),</div><div class="line">	ca: [ fs.readFileSync(<span class="string">'./keys/ca.crt'</span>) ]</div><div class="line">&#125;;</div><div class="line"><span class="keyword">var</span> stream = tls.connect(<span class="number">8000</span>, options, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">'client connected'</span>, stream.authorized ? <span class="string">'authorized'</span> : <span class="string">'unauthorized'</span>);</div><div class="line">	process.stdin.pipe(stream);</div><div class="line">&#125;);</div><div class="line">stream.setEncoding(<span class="string">'utf8'</span>);</div><div class="line">stream.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(data);</div><div class="line">&#125;);</div><div class="line">stream.on(<span class="string">'end'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">	server.close();</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<pre><code>6. HTTPS服务
    服务端：
</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> https = <span class="built_in">require</span>(<span class="string">'https'</span>);</div><div class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</div><div class="line"><span class="keyword">var</span> options = &#123;</div><div class="line">	key: fs.readFileSync(<span class="string">'./keys/server.key'</span>),</div><div class="line">	cert: fs.readFileSync(<span class="string">'./keys/server.crt'</span>)</div><div class="line">&#125;;</div><div class="line">https.createServer(options, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</div><div class="line">res.writeHead(<span class="number">200</span>);</div><div class="line">	res.end(<span class="string">"hello world\n"</span>);</div><div class="line">&#125;).listen(<span class="number">8000</span>);</div></pre></td></tr></table></figure>
<pre><code>客户端：
</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> https = <span class="built_in">require</span>(<span class="string">'https'</span>);</div><div class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</div><div class="line"><span class="keyword">var</span> options = &#123;</div><div class="line">	hostname: <span class="string">'localhost'</span>,</div><div class="line">	port: <span class="number">8000</span>,</div><div class="line">	path: <span class="string">'/'</span>,</div><div class="line">	method: <span class="string">'GET'</span>,</div><div class="line">	key: fs.readFileSync(<span class="string">'./keys/client.key'</span>),</div><div class="line">	cert: fs.readFileSync(<span class="string">'./keys/client.crt'</span>),</div><div class="line">	ca: [fs.readFileSync(<span class="string">'./keys/ca.crt'</span>)]</div><div class="line">&#125;;</div><div class="line">options.agent = <span class="keyword">new</span> https.Agent(options);</div><div class="line"><span class="keyword">var</span> req = https.request(options, <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</div><div class="line">	res.setEncoding(<span class="string">'utf-8'</span>);</div><div class="line">	res.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123;</div><div class="line">		<span class="built_in">console</span>.log(d);</div><div class="line">	&#125;);</div><div class="line">&#125;);</div><div class="line">req.end();</div><div class="line">req.on(<span class="string">'error'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(e);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="玩转进程"><a href="#玩转进程" class="headerlink" title="玩转进程"></a>玩转进程</h3><pre><code>node提供了child_process.fork()实现进程的复制
</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</div><div class="line">http.createServer(<span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</div><div class="line">	res.writeHead(<span class="number">200</span>, &#123;<span class="string">'Content-Type'</span>: <span class="string">'text/plain'</span>&#125;);</div><div class="line">	res.end(<span class="string">'Hello World\n'</span>);</div><div class="line">&#125;).listen(<span class="built_in">Math</span>.round((<span class="number">1</span> + <span class="built_in">Math</span>.random()) * <span class="number">1000</span>), <span class="string">'127.0.0.1'</span>);</div></pre></td></tr></table></figure>
<pre><code>运行node worker.js，监听?1000到2000之间的端口。

以下是master.js
</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> fork = <span class="built_in">require</span>(<span class="string">'child_process'</span>).fork;</div><div class="line"><span class="keyword">var</span> cpus = <span class="built_in">require</span>(<span class="string">'os'</span>).cpus();</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; cpus.length; i++) &#123;</div><div class="line">	fork(<span class="string">'./worker.js'</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<pre><code>这是著名的master-worker模式，主从模式

//创建子进程
child_process模块提供了四个方法创建子进程
spawn()        执行命令
exec()            执行命令        可设置时间
execFile()        执行文件        可设置时间
fork()            执行javascript
后面3中方法都是spawn()的延伸
//实例work.js
</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> cp = <span class="built_in">require</span>(<span class="string">'child_process'</span>);</div><div class="line">cp.spawn(<span class="string">'node'</span>, [<span class="string">'worker.js'</span>]);</div><div class="line">cp.exec(<span class="string">'node worker.js'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err, stdout, stderr</span>) </span>&#123;</div><div class="line"><span class="comment">// some code</span></div><div class="line">&#125;);</div><div class="line">cp.execFile(<span class="string">'worker.js'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err, stdout, stderr</span>) </span>&#123;</div><div class="line"><span class="comment">// some code</span></div><div class="line">&#125;);</div><div class="line">cp.fork(<span class="string">'./worker.js'</span>)</div></pre></td></tr></table></figure>
<pre><code>//进程间通信
在浏览器中，javascript主线程和UI渲染是一个线程，渲染UI和执行js是互相阻塞的
html5提出来webworker API，创建工作线程在后台运行
</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> worker = <span class="keyword">new</span> Worker(<span class="string">'worker.js'</span>);</div><div class="line">worker.onmessage = <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</div><div class="line">	<span class="built_in">document</span>.getElementById(<span class="string">'result'</span>).textContent = event.data;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<pre><code>work.js代码如下
</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> n = <span class="number">1</span>;</div><div class="line">search: <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</div><div class="line">	n += <span class="number">1</span>;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">2</span>; i &lt;= <span class="built_in">Math</span>.sqrt(n); i += <span class="number">1</span>)</div><div class="line">		<span class="keyword">if</span> (n  i == <span class="number">0</span>) %</div><div class="line">			<span class="keyword">continue</span> search;</div><div class="line">	<span class="comment">// found a prime</span></div><div class="line">	postMessage(n);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<pre><code>主线程和工作线程通过onmessage()和postMessage()进行通信，子进程对象由send方法
// parent.js
</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> cp = <span class="built_in">require</span>(<span class="string">'child_process'</span>);</div><div class="line"><span class="keyword">var</span> n = cp.fork(__dirname + <span class="string">'/sub.js'</span>);</div><div class="line">n.on(<span class="string">'message'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">m</span>) </span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">'PARENT got message:'</span>, m);</div><div class="line">&#125;);</div><div class="line">n.send(&#123;hello: <span class="string">'world'</span>&#125;);</div><div class="line"><span class="comment">// sub.js</span></div><div class="line">process.on(<span class="string">'message'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">m</span>) </span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">'CHILD got message:'</span>, m);</div><div class="line">&#125;);</div><div class="line">process.send(&#123;foo: <span class="string">'bar'</span>&#125;);</div></pre></td></tr></table></figure>
<pre><code>//进程间通信原理
实现进程间的技术有：管道，tcp，socket，共享内存，等。
//句柄传递
一个端口只能由一个工作进程监听，解决方案是有主进程监听一个80端口，然后
分发到其他子线程去
</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// parent.js</span></div><div class="line"><span class="keyword">var</span> child = <span class="built_in">require</span>(<span class="string">'child_process'</span>).fork(<span class="string">'child.js'</span>);</div><div class="line"><span class="comment">// Open up the server object and send the handle</span></div><div class="line"><span class="keyword">var</span> server = <span class="built_in">require</span>(<span class="string">'net'</span>).createServer();</div><div class="line">server.on(<span class="string">'connection'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">socket</span>) </span>&#123;</div><div class="line">	socket.end(<span class="string">'handled by parent\n'</span>);</div><div class="line">&#125;);</div><div class="line">server.listen(<span class="number">1337</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	child.send(<span class="string">'server'</span>, server);</div><div class="line">&#125;);</div><div class="line"><span class="comment">//child.js</span></div><div class="line">process.on(<span class="string">'message'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">m, server</span>) </span>&#123;</div><div class="line">	<span class="keyword">if</span> (m === <span class="string">'server'</span>) &#123;</div><div class="line">		server.on(<span class="string">'connection'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">socket</span>) </span>&#123;</div><div class="line">			socket.end(<span class="string">'handled by child\n'</span>);</div><div class="line">		&#125;);</div><div class="line">	&#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">//将服务发送到多个子进程实例</span></div><div class="line"><span class="comment">//parent.js</span></div><div class="line"><span class="keyword">var</span> cp = <span class="built_in">require</span>(<span class="string">'child_process'</span>);</div><div class="line"><span class="keyword">var</span> child1 = cp.fork(<span class="string">'child.js'</span>);</div><div class="line"><span class="keyword">var</span> child2 = cp.fork(<span class="string">'child.js'</span>);</div><div class="line"><span class="comment">// Open up the server object and send the handle</span></div><div class="line"><span class="keyword">var</span> server = <span class="built_in">require</span>(<span class="string">'net'</span>).createServer();</div><div class="line">server.on(<span class="string">'connection'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">socket</span>) </span>&#123;</div><div class="line">	socket.end(<span class="string">'handled by parent\n'</span>);</div><div class="line">&#125;);</div><div class="line">server.listen(<span class="number">1337</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	child1.send(<span class="string">'server'</span>, server);</div><div class="line">	child2.send(<span class="string">'server'</span>, server);</div><div class="line">&#125;);</div><div class="line"><span class="comment">//child.js</span></div><div class="line">process.on(<span class="string">'message'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">m, server</span>) </span>&#123;</div><div class="line"><span class="keyword">if</span> (m === <span class="string">'server'</span>) &#123;</div><div class="line">	server.on(<span class="string">'connection'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">socket</span>) </span>&#123;</div><div class="line">		socket.end(<span class="string">'handled by child, pid is '</span> + process.pid + <span class="string">'\n'</span>);</div><div class="line">	&#125;);</div><div class="line">&#125;</div><div class="line">&#125;)</div><div class="line"><span class="comment">//最终版，请求全部由子进程处理，</span></div><div class="line"><span class="comment">//parent,js</span></div><div class="line"><span class="keyword">var</span> cp = <span class="built_in">require</span>(<span class="string">'child_process'</span>);</div><div class="line"><span class="keyword">var</span> child1 = cp.fork(<span class="string">'child.js'</span>);</div><div class="line"><span class="keyword">var</span> child2 = cp.fork(<span class="string">'child.js'</span>);</div><div class="line"><span class="comment">// Open up the server object and send the handle</span></div><div class="line"><span class="keyword">var</span> server = <span class="built_in">require</span>(<span class="string">'net'</span>).createServer();</div><div class="line">server.listen(<span class="number">1337</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	child1.send(<span class="string">'server'</span>, server);</div><div class="line">	child2.send(<span class="string">'server'</span>, server);</div><div class="line">	server.close(); <span class="comment">//关闭主线程的服务</span></div><div class="line">&#125;);</div><div class="line"><span class="comment">//child.js</span></div><div class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</div><div class="line"><span class="keyword">var</span> server = http.createServer(<span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</div><div class="line">	res.writeHead(<span class="number">200</span>, &#123;<span class="string">'Content-Type'</span>: <span class="string">'text/plain'</span>&#125;);</div><div class="line">	res.end(<span class="string">'handled by child, pid is '</span> + process.pid + <span class="string">'\n'</span>);</div><div class="line">&#125;);</div><div class="line">process.on(<span class="string">'message'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">m, tcp</span>) </span>&#123;</div><div class="line">	<span class="keyword">if</span> (m === <span class="string">'server'</span>) &#123;</div><div class="line">		tcp.on(<span class="string">'connection'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">socket</span>) </span>&#123;</div><div class="line">			server.emit(<span class="string">'connection'</span>, socket);</div><div class="line">		&#125;);</div><div class="line">	&#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<pre><code>&lt;p&gt;
send发送的句柄类型：
    net.Socket。TCP
    net.Server。TCP服务

    net.Native。C++
    dgram.Socket。UDP
    dgram.Native。C++
//进程事件
error：
exit：
close：
disconnect：
&lt;/p&gt;
</code></pre><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//自动重启线程</span></div><div class="line"><span class="comment">//master.js</span></div><div class="line"><span class="keyword">var</span> fork = <span class="built_in">require</span>(<span class="string">'child_process'</span>).fork;</div><div class="line"><span class="keyword">var</span> cpus = <span class="built_in">require</span>(<span class="string">'os'</span>).cpus();</div><div class="line"><span class="keyword">var</span> server = <span class="built_in">require</span>(<span class="string">'net'</span>).createServer();</div><div class="line">server.listen(<span class="number">1337</span>);</div><div class="line"><span class="keyword">var</span> workers = &#123;&#125;;</div><div class="line"><span class="keyword">var</span> createWorker = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line"><span class="keyword">var</span> worker = fork(__dirname + <span class="string">'/worker.js'</span>);</div><div class="line"><span class="comment">//退出时重新启动新的线程</span></div><div class="line">worker.on(<span class="string">'exit'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="built_in">console</span>.log(<span class="string">'Worker '</span> + worker.pid + <span class="string">' exited.'</span>);</div><div class="line">	<span class="keyword">delete</span> workers[worker.pid];</div><div class="line">	createWorker();</div><div class="line">&#125;);</div><div class="line"><span class="comment">// 句柄转发</span></div><div class="line">worker.send(<span class="string">'server'</span>, server);</div><div class="line">workers[worker.pid] = worker;</div><div class="line"><span class="built_in">console</span>.log(<span class="string">'Create worker. pid: '</span> + worker.pid);</div><div class="line">&#125;;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; cpus.length; i++) &#123;</div><div class="line">createWorker();</div><div class="line">&#125;</div><div class="line"><span class="comment">// 进程自己退出让所有工作进程退出</span></div><div class="line">process.on(<span class="string">'exit'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="keyword">for</span> (<span class="keyword">var</span> pid <span class="keyword">in</span> workers) &#123;</div><div class="line">		workers[pid].kill();</div><div class="line">	&#125;</div><div class="line">&#125;);</div><div class="line"><span class="comment">//work.js  考虑处理异常</span></div><div class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</div><div class="line"><span class="keyword">var</span> server = http.createServer(<span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</div><div class="line">	res.writeHead(<span class="number">200</span>, &#123;<span class="string">'Content-Type'</span>: <span class="string">'text/plain'</span>&#125;);</div><div class="line">	res.end(<span class="string">'handled by child, pid is '</span> + process.pid + <span class="string">'\n'</span>);</div><div class="line">&#125;);</div><div class="line"><span class="keyword">var</span> worker;</div><div class="line">process.on(<span class="string">'message'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">m, tcp</span>) </span>&#123;</div><div class="line">	<span class="keyword">if</span> (m === <span class="string">'server'</span>) &#123;</div><div class="line">		worker = tcp;</div><div class="line">		worker.on(<span class="string">'connection'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">socket</span>) </span>&#123;</div><div class="line">			server.emit(<span class="string">'connection'</span>, socket);</div><div class="line">		&#125;);</div><div class="line">	&#125;</div><div class="line">&#125;);</div><div class="line">process.on(<span class="string">'uncaughtException'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">	process.send(&#123;act: <span class="string">'suicide'</span>&#125;);</div><div class="line"><span class="comment">// 停止接收新的连接</span></div><div class="line">	worker.close(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line"><span class="comment">// 连接断开后退出进程</span></div><div class="line">		process.exit(<span class="number">1</span>);</div><div class="line">	&#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<blockquote>
<p>如果文章对你有帮助,请去我的博客留个言吧! <a href="http://geeksblog.cc">我的博客</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 深入浅出Nodejs笔记：&lt;/strong&gt; &lt;Excerpt in index | 首页摘要&gt;&lt;br&gt;    node学习重点，深入浅出nodejs学习笔记&lt;br&gt;
    
    </summary>
    
      <category term="编程语言" scheme="http://geeksblog.cc/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="node" scheme="http://geeksblog.cc/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>Atom中最好的js代码补全</title>
    <link href="http://geeksblog.cc/best-js-snippet.html"/>
    <id>http://geeksblog.cc/best-js-snippet.html</id>
    <published>2016-07-21T22:11:30.000Z</published>
    <updated>2016-11-13T05:48:05.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> Atom中最好的js代码补全：</strong> <Excerpt in index | 首页摘要><br>    这或许是atom中最好的js代码补全,包含了express,nodejs,es6,目前仍在继续更新<br><a id="more"></a></p>
<The rest of contents | 余下全文>

<h2 id="best-js-snippets"><a href="#best-js-snippets" class="headerlink" title="best-js-snippets"></a>best-js-snippets</h2><p>这个package的名字就叫 <strong>best-js-snippets</strong> ,用atom的可以下载使用一下,提出建议,我会尽快修改<br><img src="http://o7kalf5h3.bkt.clouddn.com/snippets.png" alt="best-js-snippets"></p>
<h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ol>
<li>express补全</li>
<li>es6补全</li>
<li>js补全(string,dom操作)</li>
<li>nodejs补全(fs,event,util,module,class,assert)</li>
</ol>
<h2 id="如何安装"><a href="#如何安装" class="headerlink" title="如何安装"></a>如何安装</h2><ol>
<li>atom编辑器中找到设置,搜索package,安装即可.</li>
<li>重启atom,享受吧!</li>
</ol>
<blockquote>
<p>如果文章对你有帮助,请去我的博客留个言吧! <a href="http://geeksblog.cc">我的博客</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; Atom中最好的js代码补全：&lt;/strong&gt; &lt;Excerpt in index | 首页摘要&gt;&lt;br&gt;    这或许是atom中最好的js代码补全,包含了express,nodejs,es6,目前仍在继续更新&lt;br&gt;
    
    </summary>
    
      <category term="开发工具" scheme="http://geeksblog.cc/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="others" scheme="http://geeksblog.cc/tags/others/"/>
    
  </entry>
  
  <entry>
    <title>程序员编程资源汇总</title>
    <link href="http://geeksblog.cc/code-resource.html"/>
    <id>http://geeksblog.cc/code-resource.html</id>
    <published>2016-07-19T11:06:29.000Z</published>
    <updated>2016-11-13T05:48:05.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> 程序员编程资源汇总：</strong> <Excerpt in index | 首页摘要><br>    自己收集的编程相关的资源，分享给大家，希望能帮助更多的人在编程的道路上越走越远！<br><a id="more"></a></p>
<The rest of contents | 余下全文>

<h3 id="为什么写这边博客？"><a href="#为什么写这边博客？" class="headerlink" title="为什么写这边博客？"></a>为什么写这边博客？</h3><p>每个程序员都会面临一个问题，如何搜索自己需要的资料，我自己也有很多的时间花费在找寻资料上，<br>希望能把最实用的书籍和资源收集起来给大家一个</p>
<h3 id="免费的编程书籍网站"><a href="#免费的编程书籍网站" class="headerlink" title="免费的编程书籍网站"></a>免费的编程书籍网站</h3><ol>
<li>原版英文书籍<ul>
<li><a href="http://www.salttiger.com/">英文原版</a></li>
</ul>
</li>
<li>中文开源书籍<ul>
<li><a href="https://github.com/vhf/free-programming-books/blob/master/free-programming-books-zh.md">免费开源</a></li>
<li><a href="https://www.gitbook.com">gitbook</a></li>
</ul>
</li>
<li>免费下载的网站<ul>
<li><a href="http://www.jb51.net/jiaoben/">脚本之家</a></li>
<li><a href="http://vdisk.weibo.com/">新浪微盘</a></li>
</ul>
</li>
</ol>
<h3 id="代码资源"><a href="#代码资源" class="headerlink" title="代码资源"></a>代码资源</h3><ol>
<li>最好的代码仓库 <a href="https://github.com/">github</a></li>
<li><a href="https://code.csdn.net/">csdn代码仓库</a></li>
<li><a href="https://gist.github.com/">gist</a></li>
<li><a href="http://www.phpxs.com/code/">代码片段之家</a></li>
</ol>
<h3 id="博客资源"><a href="#博客资源" class="headerlink" title="博客资源"></a>博客资源</h3><ol>
<li>csdn</li>
<li>博客园</li>
<li>伯乐在线</li>
<li>简书</li>
</ol>
<h2 id="问题解答"><a href="#问题解答" class="headerlink" title="问题解答"></a>问题解答</h2><ol>
<li>stackoverflow</li>
<li>segmentfault</li>
<li>知乎</li>
<li>谷歌</li>
</ol>
<p><strong>此文章会继续更新,把最好的资源奉献给大家!!</strong></p>
<blockquote>
<p>如果文章对你有帮助,请去我的博客留个言吧! <a href="http://geeksblog.cc">我的博客</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; 程序员编程资源汇总：&lt;/strong&gt; &lt;Excerpt in index | 首页摘要&gt;&lt;br&gt;    自己收集的编程相关的资源，分享给大家，希望能帮助更多的人在编程的道路上越走越远！&lt;br&gt;
    
    </summary>
    
      <category term="others" scheme="http://geeksblog.cc/categories/others/"/>
    
    
      <category term="开发工具" scheme="http://geeksblog.cc/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Ajax和jsonp区别</title>
    <link href="http://geeksblog.cc/ajax-jsonp.html"/>
    <id>http://geeksblog.cc/ajax-jsonp.html</id>
    <published>2016-07-06T12:54:16.000Z</published>
    <updated>2016-11-27T16:16:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> ajax和jsonp区别 ：</strong> <Excerpt in index | 首页摘要><br>    jquery的封装影响了很多人的误解，所以有必要对ajax和jsonp的本质区别讲解，<br><a id="more"></a></p>
<The rest of contents | 余下全文>

<h3 id="jsonp是什么？"><a href="#jsonp是什么？" class="headerlink" title="jsonp是什么？"></a>jsonp是什么？</h3><p>利用在页面中创建<code>&lt;script&gt;</code>节点的方法向不同域提交HTTP请求的方法称为JSONP，这项技术可以解决跨域提交Ajax请求的问题。JSONP的工作原理如下所述：假设在 <a href="http://example1.com/index.php">http://example1.com/index.php</a> 这个页面中向 <a href="http://example2.com/getinfo.php">http://example2.com/getinfo.php</a> 提交GET请求，我们可以将下面的JavaScript代码放在 <a href="http://example1.com/index.php">http://example1.com/index.php</a> 这个页面中来实现：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> eleScript= <span class="built_in">document</span>.createElement(<span class="string">"script"</span>);</div><div class="line">eleScript.type = <span class="string">"text/javascript"</span>;</div><div class="line">eleScript.src = <span class="string">"http://example2.com/getinfo.php"</span>;</div><div class="line"><span class="built_in">document</span>.getElementsByTagName(<span class="string">"HEAD"</span>)[<span class="number">0</span>].appendChild(eleScript);</div></pre></td></tr></table></figure>
<p>当GET请求从 <a href="http://example2.com/getinfo.php">http://example2.com/getinfo.php</a> 返回时，可以返回一段JavaScript代码，这段代码会自动执行，可以用来负责调用 <a href="http://example1.com/index.php">http://example1.com/index.php</a> 页面中的一个callback函数。</p>
<p>JSONP的优点是：它不像XMLHttpRequest对象实现的Ajax请求那样受到同源策略的限制；它的兼容性更好，在更加古老的浏览器中都可以运行，不需要XMLHttpRequest或ActiveX的支持；并且在请求完毕后可以通过调用callback的方式回传结果。</p>
<p>JSONP的缺点则是：它只支持GET请求而不支持POST等其它类型的HTTP请求；它只支持跨域HTTP请求这种情况，不能解决不同域的两个页面之间如何进行JavaScript调用的问题。</p>
<h3 id="ajax是什么？"><a href="#ajax是什么？" class="headerlink" title="ajax是什么？"></a>ajax是什么？</h3><p>Ajax的原理简单来说通过XmlHttpRequest对象来向服务器发异步请求，从服务器获得数据，然后用javascript来操作DOM而更新页面。这其中最关键的一步就是从服务器获得请求数据。要清楚这个过程和原理，我们必须对 XMLHttpRequest有所了解。<br>　XMLHttpRequest是ajax的核心机制，它是在IE5中首先引入的，是一种支持异步请求的技术。简单的说，也就是javascript可以及时向服务器提出请求和处理响应，而不阻塞用户。达到无刷新的效果。</p>
<h3 id="误区是怎么产生的？"><a href="#误区是怎么产生的？" class="headerlink" title="误区是怎么产生的？"></a>误区是怎么产生的？</h3><p>这个很大程度上要归功于jquery的封装，由于jquery在api上，对json和jsonp都属于ajax模块，导致很多人误以为jsonp是ajax一种。</p>
<blockquote>
<p>如果文章对你有帮助,请去我的博客留个言吧! <a href="http://geeksblog.cc">我的博客</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; ajax和jsonp区别 ：&lt;/strong&gt; &lt;Excerpt in index | 首页摘要&gt;&lt;br&gt;    jquery的封装影响了很多人的误解，所以有必要对ajax和jsonp的本质区别讲解，&lt;br&gt;
    
    </summary>
    
      <category term="编程语言" scheme="http://geeksblog.cc/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="http" scheme="http://geeksblog.cc/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>Ajax简单教程</title>
    <link href="http://geeksblog.cc/ajax-study.html"/>
    <id>http://geeksblog.cc/ajax-study.html</id>
    <published>2016-07-06T12:53:11.000Z</published>
    <updated>2016-11-27T16:16:07.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> ajax简单教程：</strong> <Excerpt in index | 首页摘要><br>    ajax常用的方法，一些容易出错的地方<br><a id="more"></a></p>
<The rest of contents | 余下全文>

<h3 id="ajax原理"><a href="#ajax原理" class="headerlink" title="ajax原理"></a>ajax原理</h3><p>Ajax的原理简单来说通过XmlHttpRequest对象来向服务器发异步请求，从服务器获得数据，然后用javascript来操作DOM而更新页面。这其中最关键的一步就是从服务器获得请求数据。要清楚这个过程和原理，我们必须对 XMLHttpRequest有所了解。<br>XMLHttpRequest是ajax的核心机制，它是在IE5中首先引入的，是一种支持异步请求的技术。简单的说，也就是javascript可以及时向服务器提出请求和处理响应，而不阻塞用户。达到无刷新的效果。<br>所以我们先从XMLHttpRequest讲起，来看看它的工作原理。首先，我们先来看看XMLHttpRequest这个对象的属性。<br>它的属性有：</p>
<table>
<thead>
<tr>
<th style="text-align:left">onreadystatechange</th>
<th style="text-align:left">responseText</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">每次状态改变所触发事件的事件处理程序</td>
<td style="text-align:left">从服务器进程返回数据的字符串形式</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:left">responseXML</th>
<th style="text-align:left">status</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">从服务器进程返回的DOM兼容的文档数据对象</td>
<td style="text-align:left">从服务器返回的数字代码，比如常见的404</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:left">status Text</th>
<th style="text-align:left">readyState</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">伴随状态码的字符串信息</td>
<td style="text-align:left">对象状态值</td>
</tr>
</tbody>
</table>
<p>readyState 对象状态值</p>
<ul>
<li>0 (未初始化) 对象已建立，但是尚未初始化（尚未调用open方法）</li>
<li>1 (初始化) 对象已建立，尚未调用send方法</li>
<li>2 (发送数据) send方法已调用，但是当前的状态及http头未知</li>
<li>3 (数据传送中) 已接收部分数据，因为响应及http头不全，这时通过responseBody和responseText获取部分数据会出现错误，</li>
<li>4 (完成) 数据接收完毕,此时可以通过通过responseXml和responseText获取完整的回应数据</li>
</ul>
<h3 id="ajax的使用"><a href="#ajax的使用" class="headerlink" title="ajax的使用"></a>ajax的使用</h3><ol>
<li>原生的ajax</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">CreateXmlHttp</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">//非IE浏览器创建XmlHttpRequest对象</span></div><div class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.XmlHttpRequest) &#123;</div><div class="line">        xmlhttp = <span class="keyword">new</span> XmlHttpRequest();</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//IE浏览器创建XmlHttpRequest对象</span></div><div class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.ActiveXObject) &#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            xmlhttp = <span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">catch</span> (e) &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                xmlhttp = <span class="keyword">new</span> ActiveXObject(<span class="string">"msxml2.XMLHTTP"</span>);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">catch</span> (ex) &#123; &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">Ustbwuyi</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> data = <span class="built_in">document</span>.getElementById(<span class="string">"username"</span>).value;</div><div class="line">    CreateXmlHttp();</div><div class="line">    <span class="keyword">if</span> (!xmlhttp) &#123;</div><div class="line">        alert(<span class="string">"创建xmlhttp对象异常！"</span>);</div><div class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">    &#125;</div><div class="line">    xmlhttp.open(<span class="string">"POST"</span>, url, <span class="literal">false</span>);</div><div class="line">    xmlhttp.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="keyword">if</span> (xmlhttp.readyState == <span class="number">4</span>) &#123;</div><div class="line">            <span class="built_in">document</span>.getElementById(<span class="string">"user1"</span>).innerHTML = <span class="string">"数据正在加载..."</span>;</div><div class="line">            <span class="keyword">if</span> (xmlhttp.status == <span class="number">200</span>) &#123;</div><div class="line">                <span class="built_in">document</span>.write(xmlhttp.responseText);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    xmlhttp.send();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ol>
<li>jquery调用ajax</li>
</ol>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">$.ajax(&#123;</div><div class="line">    type: <span class="string">"get"</span>,</div><div class="line">    url: <span class="string">"http://www.cnblogs.com/rss"</span>,</div><div class="line">    beforeSend: <span class="function"><span class="keyword">function</span>(<span class="params">XMLHttpRequest</span>)</span>&#123;</div><div class="line">    <span class="comment">//ShowLoading();</span></div><div class="line">    &#125;,</div><div class="line">    success: <span class="function"><span class="keyword">function</span>(<span class="params">data, textStatus</span>)</span>&#123;</div><div class="line">        $(<span class="string">".ajax.ajaxResult"</span>).html(<span class="string">""</span>);</div><div class="line">        $(<span class="string">"item"</span>,data).each(<span class="function"><span class="keyword">function</span>(<span class="params">i, domEle</span>)</span>&#123;</div><div class="line">        $(<span class="string">".ajax.ajaxResult"</span>).append(<span class="string">"&lt;li&gt;"</span>+$(domEle).children(<span class="string">"title"</span>).text()+<span class="string">"&lt;/li&gt;"</span>);</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">    &#125;,</div><div class="line">    complete: <span class="function"><span class="keyword">function</span>(<span class="params">XMLHttpRequest, textStatus</span>)</span>&#123;</div><div class="line">    <span class="comment">//HideLoading();</span></div><div class="line">    &#125;,</div><div class="line">    error: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    <span class="comment">//请求出错处理</span></div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<blockquote>
<p>如果文章对你有帮助,请去我的博客留个言吧! <a href="http://geeksblog.cc">我的博客</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; ajax简单教程：&lt;/strong&gt; &lt;Excerpt in index | 首页摘要&gt;&lt;br&gt;    ajax常用的方法，一些容易出错的地方&lt;br&gt;
    
    </summary>
    
      <category term="编程语言" scheme="http://geeksblog.cc/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="http" scheme="http://geeksblog.cc/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>Mysql优化</title>
    <link href="http://geeksblog.cc/mysql-optimize.html"/>
    <id>http://geeksblog.cc/mysql-optimize.html</id>
    <published>2016-06-10T23:25:13.000Z</published>
    <updated>2016-11-13T05:48:05.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> mysql优化：</strong> <Excerpt in index | 首页摘要><br>    mysql的优化措施，从sql优化做起<br><a id="more"></a></p>
<The rest of contents | 余下全文>

<h3 id="优化sql的一般步骤"><a href="#优化sql的一般步骤" class="headerlink" title="优化sql的一般步骤"></a>优化sql的一般步骤</h3><ol>
<li>通过show status了解各种sql的执行频率</li>
<li>定位执行效率低的sql语句</li>
<li>通过explain分析效率低的sql</li>
<li>通过show profile分析sql</li>
<li>通过trace分析优化器如何选择执行计划</li>
<li>确定问题，采取措施优化</li>
</ol>
<h3 id="索引优化措施"><a href="#索引优化措施" class="headerlink" title="索引优化措施"></a>索引优化措施</h3><ol>
<li><p>mysql中使用索引的典型场景</p>
<ol>
<li>匹配全值，条件所有列都在索引中而且是等值匹配</li>
<li>匹配值的范围查找，字段必须在索引中</li>
<li>匹配最左前缀，复合索引只会根据最左列进行查找</li>
<li>仅仅对索引进行查询，即查询的所有字段都在索引上</li>
<li>匹配列前缀，比如like ‘ABC%’,如果是like ‘%aaa’就不可以</li>
<li>如果列名是索引，使用column is null会使用索引</li>
</ol>
</li>
<li><p>存在索引但不会使用索引的典型场景</p>
<ol>
<li>以%开头的like查询不能使用b树索引</li>
<li>数据类型出现隐式转换不能使用索引</li>
<li>复合索引，查询条件不符合最左列原则</li>
<li>用or分割的条件，如果前面的条件有索引，而后面的条件没有索引</li>
</ol>
</li>
<li><p>查看索引使用的情况</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">show</span> <span class="keyword">status</span> <span class="keyword">like</span> <span class="string">'Handler_read%'</span>;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>如果Handler_read_rnd_next的值比较高，说明索引不正确或者查询没有使用到索引</p>
<h3 id="简单实用的优化方法"><a href="#简单实用的优化方法" class="headerlink" title="简单实用的优化方法"></a>简单实用的优化方法</h3><ol>
<li>定期检查表和分析表<br>分析表语法：<figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">analyze <span class="keyword">table</span> 表名；</div></pre></td></tr></table></figure>
</li>
</ol>
<p>检查表语法：<br><figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">check <span class="keyword">table</span> 表名；</div></pre></td></tr></table></figure></p>
<ol>
<li>定期优化表<ul>
<li>对于字节大小不固定的字段，数据更新和删除会造成磁盘空间不释放，这时候就行优化表，可以整理磁盘碎片，提高性能<br>语法如下：<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">optimize</span> <span class="keyword">table</span> <span class="keyword">user</span>(表名)；</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ol>
<blockquote>
<p>如果文章对你有帮助,请去我的博客留个言吧! <a href="http://geeksblog.cc">我的博客</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; mysql优化：&lt;/strong&gt; &lt;Excerpt in index | 首页摘要&gt;&lt;br&gt;    mysql的优化措施，从sql优化做起&lt;br&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://geeksblog.cc/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://geeksblog.cc/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>mac下mysql5.6字符集设置</title>
    <link href="http://geeksblog.cc/mac-mysql-unicode.html"/>
    <id>http://geeksblog.cc/mac-mysql-unicode.html</id>
    <published>2016-05-28T15:10:37.000Z</published>
    <updated>2016-11-13T05:48:05.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> mac下mysql5.6字符集设置：</strong> <Excerpt in index | 首页摘要><br>    在mac下设置mysql5.6字符集时踩过的坑，百分百保证有效<br><a id="more"></a></p>
<p><The rest of contents | 余下全文></p>
<h3 id="为什么要设置字符集"><a href="#为什么要设置字符集" class="headerlink" title="为什么要设置字符集"></a>为什么要设置字符集</h3><ol>
<li>设置字符集主要是解决乱码问题，由于中文和英文编码不同导致，中文出现乱码，所以一般都设置为utf8格式</li>
<li>不同的字符集和编码占用的字节不同，选择适合的编码会提高数据库性能</li>
</ol>
<h3 id="mac下设置"><a href="#mac下设置" class="headerlink" title="mac下设置"></a>mac下设置</h3><ul>
<li>在/etc/my.cnf文件进行设置，如果没有此文件可以从/usr/local/mysql/support-files/拷贝，命令如下<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">cd</span> /usr/local/mysql/support-<span class="keyword">files</span></div><div class="line">sudo <span class="keyword">cp</span> my.<span class="keyword">cnf</span> /etc/my.<span class="keyword">cnf</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>查看文件的读写权限，如果为644（rw- r– r–）则改为(664) (rw- rw- r–)<br>如果改为(666)(rw- rw- rw-)则修改以后配置文件不会生效<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo chmod <span class="number">664</span> /etc/<span class="keyword">my</span>.cnf</div></pre></td></tr></table></figure></p>
<ul>
<li>my.cnf设置如下：<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="section">[client]</span></div><div class="line"><span class="attr">default-character-set</span>=utf8</div><div class="line"><span class="section">[mysqld]</span></div><div class="line"><span class="attr">collation-server</span> = utf8_unicode_ci</div><div class="line"><span class="attr">init-connect</span>=<span class="string">'SET NAMES utf8'</span></div><div class="line"><span class="attr">character-set-server</span> = utf8</div><div class="line"><span class="section">[mysql]</span></div><div class="line"><span class="attr">default-character-set</span>=utf8</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="查看设置是否成功"><a href="#查看设置是否成功" class="headerlink" title="查看设置是否成功"></a>查看设置是否成功</h3><p>在命令行输入mysql，如果提示没有命令的话，在bash或者zsh的文件里修改，我用的是zsh，设置~/.zshrc,<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">export</span> MYSQL=<span class="string">"/usr/local/mysql/bin/"</span></div><div class="line"><span class="built_in">export</span> PATH=<span class="string">"/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:<span class="variable">$MYSQL</span>"</span></div></pre></td></tr></table></figure></p>
<p>在命令行输入mysql,进入mysql命令行后，输入<code>status;</code>或者<code>show variables like &#39;%char%&#39;;</code><br><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">|<span class="string"> character_set_client     </span>|<span class="string"> utf8                                                    </span>|</div><div class="line">|<span class="string"> character_set_connection </span>|<span class="string"> utf8                                                    </span>|</div><div class="line">|<span class="string"> character_set_database   </span>|<span class="string"> utf8                                                    </span>|</div><div class="line">|<span class="string"> character_set_filesystem </span>|<span class="string"> binary                                                  </span>|</div><div class="line">|<span class="string"> character_set_results    </span>|<span class="string"> utf8                                                    </span>|</div><div class="line">|<span class="string"> character_set_server     </span>|<span class="string"> utf8                                                    </span>|</div><div class="line">|<span class="string"> character_set_system     </span>|<span class="string"> utf8                                                    </span>|</div><div class="line">|<span class="string"> character_sets_dir       </span>|<span class="string"> /usr/local/mysql-5.6.30-osx10.11-x86_64/share/charsets/</span></div></pre></td></tr></table></figure></p>
<blockquote>
<p>如果文章对你有帮助,请去我的博客留个言吧! <a href="http://geeksblog.cc">我的博客</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; mac下mysql5.6字符集设置：&lt;/strong&gt; &lt;Excerpt in index | 首页摘要&gt;&lt;br&gt;    在mac下设置mysql5.6字符集时踩过的坑，百分百保证有效&lt;br&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://geeksblog.cc/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://geeksblog.cc/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Mysql学习笔记</title>
    <link href="http://geeksblog.cc/mysql-study.html"/>
    <id>http://geeksblog.cc/mysql-study.html</id>
    <published>2016-05-28T14:24:56.000Z</published>
    <updated>2016-11-13T05:48:05.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong> mysql学习笔记：</strong> <Excerpt in index | 首页摘要><br>    mysql学习，基础的增删改查，数据库优化，索引，分片，集群搭建等等。<br><a id="more"></a></p>
<The rest of contents | 余下全文\>

<h3 id="mysql的特点"><a href="#mysql的特点" class="headerlink" title="mysql的特点"></a>mysql的特点</h3><ol>
<li>关系型数据库，免费使用，</li>
<li>插入式存储引擎，</li>
<li>性能高，</li>
</ol>
<h3 id="基础的增删改查"><a href="#基础的增删改查" class="headerlink" title="基础的增删改查"></a>基础的增删改查</h3><ol>
<li><p>ddl语句，数据定义语句</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">create</span> <span class="keyword">database</span> test1;</div><div class="line"><span class="keyword">drop</span> <span class="keyword">database</span> test1;</div><div class="line"><span class="keyword">use</span> test1;</div><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp(ename <span class="built_in">varchar</span>(<span class="number">10</span>),hiredate <span class="built_in">date</span>,sal <span class="built_in">decimal</span>(<span class="number">10</span>,<span class="number">2</span>),deptno <span class="built_in">int</span>(<span class="number">2</span>));</div><div class="line"><span class="keyword">drop</span> <span class="keyword">table</span> emp;</div><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">modify</span> ename <span class="built_in">varchar</span>(<span class="number">20</span>);</div><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">add</span> <span class="keyword">column</span> age <span class="built_in">int</span>(<span class="number">3</span>);</div><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">drop</span> <span class="keyword">column</span> age;</div><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">change</span> age age1 <span class="built_in">int</span>(<span class="number">4</span>);</div><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">add</span> birth <span class="built_in">date</span> <span class="keyword">after</span> ename;</div><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">modify</span> age <span class="built_in">int</span>(<span class="number">3</span>) <span class="keyword">first</span>;</div><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp <span class="keyword">rename</span> emp1;</div></pre></td></tr></table></figure>
</li>
<li><p>dml语句，数据操纵语句</p>
 <figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> emp(ename,hiredate,sal,deptno) <span class="keyword">values</span>(<span class="string">'zzx1'</span>,<span class="string">'2000-10-11'</span>,<span class="number">2000</span>,<span class="number">1</span>);</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> emp <span class="keyword">values</span>(<span class="string">'lisa'</span>,<span class="string">'2004-05-09'</span>,<span class="number">3000</span>,<span class="number">2</span>);</div><div class="line"><span class="keyword">insert</span> <span class="keyword">into</span> dept <span class="keyword">values</span>(<span class="number">5</span>,<span class="string">'dept5'</span>),(<span class="number">6</span>,<span class="string">'dept6'</span>);</div><div class="line"><span class="keyword">update</span> emp <span class="keyword">set</span> sal=<span class="number">4000</span> <span class="keyword">where</span> ename=<span class="string">'lisa'</span>;</div><div class="line"><span class="keyword">update</span> emp a,dept b <span class="keyword">set</span> a.sal=a.sal*b.deptno,b.deptname=a.ename <span class="keyword">where</span> a.deptno=b.deptno;</div><div class="line"><span class="keyword">delete</span> <span class="keyword">from</span> emp <span class="keyword">where</span> ename=<span class="string">'dony'</span>;</div><div class="line"><span class="keyword">delete</span> a,b <span class="keyword">from</span> emp a,dept b <span class="keyword">where</span> a.deptno=b.deptno <span class="keyword">and</span> a.deptno=<span class="number">3</span>;</div><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">where</span> ename=<span class="string">'lisa'</span>;</div><div class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> deptno <span class="keyword">from</span> emp;</div><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal(<span class="keyword">desc</span>);</div><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">limit</span> <span class="number">5</span>;</div><div class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">5</span>;ss</div></pre></td></tr></table></figure>
</li>
<li><p>dcl语句，数据控制语句</p>
</li>
</ol>
<h3 id="sql优化"><a href="#sql优化" class="headerlink" title="sql优化"></a>sql优化</h3><ol>
<li>尽量使用 prepareStatement(java)，利用预处理功能。</li>
<li>在进行多条记录的增加、修改、删除时，建议使用批处理功能，批处理的次数以整<br>个 SQL 语句不超过相应数据库的 SQL 语句大小的限制为准。</li>
<li>建议每条 SQL 语句中 in 中的元素个数在 200 以下，如果个数超过时，应拆分为多<br>条 SQL 语句。禁止使用 xx in(‘’,’’….) or xx in(‘’,’’,’’)。 ★</li>
<li>禁止使用 or 超过 200，如 xx =’123’ or xx=’456’。 ★</li>
<li>尽量不使用外连接。</li>
<li>禁止使用 not in 语句，建议用 not exist。 ★</li>
<li>禁止使用 Union, 如果有业务需要，请拆分为两个查询。 ★</li>
<li>禁止在一条 SQL 语句中使用 3 层以上的嵌套查询，如果有，请考虑使用临时表或<br>中间结果集。</li>
<li>尽量避免在一条 SQL 语句中从&gt;= 4 个表中同时取数， 对于仅是作为过滤条件关联，<br>但不涉及取数的表，不参与表个数计算</li>
<li>查询条件里任何对列的操作都将导致表扫描，所以应尽量将数据库函数、计算表达<br>式写在逻辑操作符右边。</li>
<li>在对 char 类型比较时,建议不要使用 rtrim()函数,应该在程序中将不足的长度补<br>齐。</li>
<li>用多表连接代替 EXISTS 子句。</li>
<li>如果有多表连接时， 应该有主从之分， 并尽量从一个表取数， 如 select a.col1, a.col2<br>from a join b on a.col3=b.col4 where b.col5 = ‘a’。</li>
<li>在使用 Like 时，建议 Like 的一边是字符串，表列在一边出现。</li>
<li>不允许将 where 子句的条件放到 having 中。</li>
<li>将更新操作放到事务的最后执行。如</li>
<li>一个事务需更新多个对象时，需保证更新的顺序一致以避免死锁的发生。如总是先<br>更新子表再更新主表，根据存货档案批量更新现存量时，对传入的存货档案 PK 进<br>行排序，再做更新处理等。</li>
<li>禁止随意使用临时表，在临时数据不超过 200 行的情况下禁止使用临时表。</li>
<li>禁止随意使用 distinct，避免造成不必要的排序。</li>
</ol>
<h3 id="索引优化"><a href="#索引优化" class="headerlink" title="索引优化"></a>索引优化</h3><ol>
<li><p>创建索引，删除索引</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">create</span> <span class="keyword">index</span> cityname <span class="keyword">on</span> city(city(<span class="number">10</span>));</div><div class="line"><span class="keyword">drop</span> <span class="keyword">index</span> cityname <span class="keyword">on</span> city;</div></pre></td></tr></table></figure>
</li>
<li><p>搜索的索引列最好在where的字句或者连接子句</p>
</li>
<li>使用唯一索引</li>
<li>使用短索引，对于较长的字段，使用其前缀做索引</li>
<li>不要过度使用索引，索引引起额外的性能开销和维护</li>
</ol>
<h3 id="高级优化措施"><a href="#高级优化措施" class="headerlink" title="高级优化措施"></a>高级优化措施</h3><h3 id="集群搭建"><a href="#集群搭建" class="headerlink" title="集群搭建"></a>集群搭建</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt; mysql学习笔记：&lt;/strong&gt; &lt;Excerpt in index | 首页摘要&gt;&lt;br&gt;    mysql学习，基础的增删改查，数据库优化，索引，分片，集群搭建等等。&lt;br&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://geeksblog.cc/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://geeksblog.cc/tags/mysql/"/>
    
  </entry>
  
</feed>
